
Input Capture.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000042  00800060  000010d6  0000116a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  008000a2  008000a2  000011ac  2**0
                  ALLOC
  3 .stab         00002b68  00000000  00000000  000011ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009fd  00000000  00000000  00003d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00004711  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000191  00000000  00000000  000047b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000103a  00000000  00000000  00004942  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000064a  00000000  00000000  0000597c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011da  00000000  00000000  00005fc6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000130  00000000  00000000  000071a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003dc  00000000  00000000  000072d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000092c  00000000  00000000  000076ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000134  00000000  00000000  00007fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000048  00000000  00000000  0000810c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 88 01 	jmp	0x310	; 0x310 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ed       	ldi	r30, 0xD6	; 214
      68:	f0 e1       	ldi	r31, 0x10	; 16
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 3a       	cpi	r26, 0xA2	; 162
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 ea       	ldi	r26, 0xA2	; 162
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3b       	cpi	r26, 0xB5	; 181
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 74 01 	call	0x2e8	; 0x2e8 <main>
      8a:	0c 94 69 08 	jmp	0x10d2	; 0x10d2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Timer1_Capture_Init>:
float duty;
char fre_disp[] = "Frequency:xxxkHz";
char duty_disp[] = "Duty:      xx.x%";

void Timer1_Capture_Init(){
	TCCR1B |=  (1<<ICES1) | (1<<CS10);				//(1<<ICNC1) |
      92:	8e b5       	in	r24, 0x2e	; 46
      94:	81 64       	ori	r24, 0x41	; 65
      96:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1<<TICIE1);
      98:	89 b7       	in	r24, 0x39	; 57
      9a:	80 62       	ori	r24, 0x20	; 32
      9c:	89 bf       	out	0x39, r24	; 57
	TCNT1 = 0;
      9e:	1d bc       	out	0x2d, r1	; 45
      a0:	1c bc       	out	0x2c, r1	; 44
	step = 0;
      a2:	10 92 ac 00 	sts	0x00AC, r1
}
      a6:	08 95       	ret

000000a8 <Update_LCD>:

void Update_LCD(){
      a8:	8f 92       	push	r8
      aa:	9f 92       	push	r9
      ac:	af 92       	push	r10
      ae:	bf 92       	push	r11
      b0:	cf 92       	push	r12
      b2:	df 92       	push	r13
      b4:	ef 92       	push	r14
      b6:	ff 92       	push	r15
      b8:	1f 93       	push	r17
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
	uint8_t duty_int, duty_dec;
	duty_int = floor(duty);
      be:	c0 90 b1 00 	lds	r12, 0x00B1
      c2:	d0 90 b2 00 	lds	r13, 0x00B2
      c6:	e0 90 b3 00 	lds	r14, 0x00B3
      ca:	f0 90 b4 00 	lds	r15, 0x00B4
      ce:	c7 01       	movw	r24, r14
      d0:	b6 01       	movw	r22, r12
      d2:	0e 94 1d 04 	call	0x83a	; 0x83a <floor>
      d6:	0e 94 b4 03 	call	0x768	; 0x768 <__fixunssfsi>
      da:	16 2f       	mov	r17, r22
	duty_dec = 10*((float)((float)(duty) - ((float)(duty_int))));
	sprintf(fre_disp,"Freq:%9dHz",freq);
      dc:	8d b7       	in	r24, 0x3d	; 61
      de:	9e b7       	in	r25, 0x3e	; 62
      e0:	08 97       	sbiw	r24, 0x08	; 8
      e2:	0f b6       	in	r0, 0x3f	; 63
      e4:	f8 94       	cli
      e6:	9e bf       	out	0x3e, r25	; 62
      e8:	0f be       	out	0x3f, r0	; 63
      ea:	8d bf       	out	0x3d, r24	; 61
      ec:	ed b7       	in	r30, 0x3d	; 61
      ee:	fe b7       	in	r31, 0x3e	; 62
      f0:	31 96       	adiw	r30, 0x01	; 1
      f2:	0f 2e       	mov	r0, r31
      f4:	ff e7       	ldi	r31, 0x7F	; 127
      f6:	af 2e       	mov	r10, r31
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	bf 2e       	mov	r11, r31
      fc:	f0 2d       	mov	r31, r0
      fe:	ad b7       	in	r26, 0x3d	; 61
     100:	be b7       	in	r27, 0x3e	; 62
     102:	12 96       	adiw	r26, 0x02	; 2
     104:	bc 92       	st	X, r11
     106:	ae 92       	st	-X, r10
     108:	11 97       	sbiw	r26, 0x01	; 1
     10a:	80 e6       	ldi	r24, 0x60	; 96
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	93 83       	std	Z+3, r25	; 0x03
     110:	82 83       	std	Z+2, r24	; 0x02
     112:	80 91 a2 00 	lds	r24, 0x00A2
     116:	90 91 a3 00 	lds	r25, 0x00A3
     11a:	a0 91 a4 00 	lds	r26, 0x00A4
     11e:	b0 91 a5 00 	lds	r27, 0x00A5
     122:	84 83       	std	Z+4, r24	; 0x04
     124:	95 83       	std	Z+5, r25	; 0x05
     126:	a6 83       	std	Z+6, r26	; 0x06
     128:	b7 83       	std	Z+7, r27	; 0x07
     12a:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
	sprintf(duty_disp,"Duty:      %2d.%1d_",duty_int,duty_dec);
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	21 96       	adiw	r28, 0x01	; 1
     134:	0f 2e       	mov	r0, r31
     136:	f0 e9       	ldi	r31, 0x90	; 144
     138:	8f 2e       	mov	r8, r31
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	9f 2e       	mov	r9, r31
     13e:	f0 2d       	mov	r31, r0
     140:	ed b7       	in	r30, 0x3d	; 61
     142:	fe b7       	in	r31, 0x3e	; 62
     144:	92 82       	std	Z+2, r9	; 0x02
     146:	81 82       	std	Z+1, r8	; 0x01
     148:	8b e6       	ldi	r24, 0x6B	; 107
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	9b 83       	std	Y+3, r25	; 0x03
     14e:	8a 83       	std	Y+2, r24	; 0x02
     150:	1c 83       	std	Y+4, r17	; 0x04
     152:	1d 82       	std	Y+5, r1	; 0x05
}

void Update_LCD(){
	uint8_t duty_int, duty_dec;
	duty_int = floor(duty);
	duty_dec = 10*((float)((float)(duty) - ((float)(duty_int))));
     154:	61 2f       	mov	r22, r17
     156:	70 e0       	ldi	r23, 0x00	; 0
     158:	80 e0       	ldi	r24, 0x00	; 0
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__floatunsisf>
     160:	9b 01       	movw	r18, r22
     162:	ac 01       	movw	r20, r24
     164:	c7 01       	movw	r24, r14
     166:	b6 01       	movw	r22, r12
     168:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__subsf3>
     16c:	20 e0       	ldi	r18, 0x00	; 0
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	40 e2       	ldi	r20, 0x20	; 32
     172:	51 e4       	ldi	r21, 0x41	; 65
     174:	0e 94 c1 04 	call	0x982	; 0x982 <__mulsf3>
     178:	0e 94 b4 03 	call	0x768	; 0x768 <__fixunssfsi>
	sprintf(fre_disp,"Freq:%9dHz",freq);
	sprintf(duty_disp,"Duty:      %2d.%1d_",duty_int,duty_dec);
     17c:	6e 83       	std	Y+6, r22	; 0x06
     17e:	1f 82       	std	Y+7, r1	; 0x07
     180:	0e 94 88 05 	call	0xb10	; 0xb10 <sprintf>
	duty_disp[15] = '%';
     184:	85 e2       	ldi	r24, 0x25	; 37
     186:	80 93 9f 00 	sts	0x009F, r24
	LCDClear();
     18a:	8d b7       	in	r24, 0x3d	; 61
     18c:	9e b7       	in	r25, 0x3e	; 62
     18e:	08 96       	adiw	r24, 0x08	; 8
     190:	0f b6       	in	r0, 0x3f	; 63
     192:	f8 94       	cli
     194:	9e bf       	out	0x3e, r25	; 62
     196:	0f be       	out	0x3f, r0	; 63
     198:	8d bf       	out	0x3d, r24	; 61
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	60 e0       	ldi	r22, 0x00	; 0
     19e:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
	LCDGotoXY(0,0);
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	60 e0       	ldi	r22, 0x00	; 0
     1a6:	0e 94 d5 02 	call	0x5aa	; 0x5aa <LCDGotoXY>
	LCDWriteString(fre_disp);
     1aa:	c5 01       	movw	r24, r10
     1ac:	0e 94 64 02 	call	0x4c8	; 0x4c8 <LCDWriteString>
	LCDGotoXY(0,1);
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	61 e0       	ldi	r22, 0x01	; 1
     1b4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <LCDGotoXY>
	LCDWriteString(duty_disp);
     1b8:	c4 01       	movw	r24, r8
     1ba:	0e 94 64 02 	call	0x4c8	; 0x4c8 <LCDWriteString>
}
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	1f 91       	pop	r17
     1c4:	ff 90       	pop	r15
     1c6:	ef 90       	pop	r14
     1c8:	df 90       	pop	r13
     1ca:	cf 90       	pop	r12
     1cc:	bf 90       	pop	r11
     1ce:	af 90       	pop	r10
     1d0:	9f 90       	pop	r9
     1d2:	8f 90       	pop	r8
     1d4:	08 95       	ret

000001d6 <Freq_Duty_Calculating>:

void Freq_Duty_Calculating(){
     1d6:	af 92       	push	r10
     1d8:	bf 92       	push	r11
     1da:	cf 92       	push	r12
     1dc:	df 92       	push	r13
     1de:	ef 92       	push	r14
     1e0:	ff 92       	push	r15
     1e2:	0f 93       	push	r16
     1e4:	1f 93       	push	r17
	if(t2 < t1){
     1e6:	80 91 a8 00 	lds	r24, 0x00A8
     1ea:	90 91 a9 00 	lds	r25, 0x00A9
     1ee:	20 91 aa 00 	lds	r18, 0x00AA
     1f2:	30 91 ab 00 	lds	r19, 0x00AB
     1f6:	82 17       	cp	r24, r18
     1f8:	93 07       	cpc	r25, r19
     1fa:	98 f4       	brcc	.+38     	; 0x222 <Freq_Duty_Calculating+0x4c>
		on_time = 0xFFFF - t1 + t2;
     1fc:	20 95       	com	r18
     1fe:	30 95       	com	r19
     200:	82 0f       	add	r24, r18
     202:	93 1f       	adc	r25, r19
     204:	90 93 b0 00 	sts	0x00B0, r25
     208:	80 93 af 00 	sts	0x00AF, r24
		period = 0xFFFF - t1 + t3;
     20c:	80 91 a6 00 	lds	r24, 0x00A6
     210:	90 91 a7 00 	lds	r25, 0x00A7
     214:	28 0f       	add	r18, r24
     216:	39 1f       	adc	r19, r25
     218:	30 93 ae 00 	sts	0x00AE, r19
     21c:	20 93 ad 00 	sts	0x00AD, r18
     220:	22 c0       	rjmp	.+68     	; 0x266 <Freq_Duty_Calculating+0x90>
	}
	else if(t3 < t2){
     222:	40 91 a6 00 	lds	r20, 0x00A6
     226:	50 91 a7 00 	lds	r21, 0x00A7
     22a:	48 17       	cp	r20, r24
     22c:	59 07       	cpc	r21, r25
     22e:	78 f4       	brcc	.+30     	; 0x24e <Freq_Duty_Calculating+0x78>
		on_time = t2 - t1;
     230:	82 1b       	sub	r24, r18
     232:	93 0b       	sbc	r25, r19
     234:	90 93 b0 00 	sts	0x00B0, r25
     238:	80 93 af 00 	sts	0x00AF, r24
		period = 0xFFFF - t1 + t3;
     23c:	20 95       	com	r18
     23e:	30 95       	com	r19
     240:	42 0f       	add	r20, r18
     242:	53 1f       	adc	r21, r19
     244:	50 93 ae 00 	sts	0x00AE, r21
     248:	40 93 ad 00 	sts	0x00AD, r20
     24c:	0c c0       	rjmp	.+24     	; 0x266 <Freq_Duty_Calculating+0x90>
	}
	else{
		on_time = t2 - t1;
     24e:	82 1b       	sub	r24, r18
     250:	93 0b       	sbc	r25, r19
     252:	90 93 b0 00 	sts	0x00B0, r25
     256:	80 93 af 00 	sts	0x00AF, r24
		period = t3 - t1;
     25a:	42 1b       	sub	r20, r18
     25c:	53 0b       	sbc	r21, r19
     25e:	50 93 ae 00 	sts	0x00AE, r21
     262:	40 93 ad 00 	sts	0x00AD, r20
	}
	freq = F_CPU/period;
     266:	e0 90 ad 00 	lds	r14, 0x00AD
     26a:	f0 90 ae 00 	lds	r15, 0x00AE
     26e:	00 e0       	ldi	r16, 0x00	; 0
     270:	10 e0       	ldi	r17, 0x00	; 0
     272:	60 e0       	ldi	r22, 0x00	; 0
     274:	74 e2       	ldi	r23, 0x24	; 36
     276:	84 ef       	ldi	r24, 0xF4	; 244
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	a8 01       	movw	r20, r16
     27c:	97 01       	movw	r18, r14
     27e:	0e 94 37 05 	call	0xa6e	; 0xa6e <__divmodsi4>
     282:	20 93 a2 00 	sts	0x00A2, r18
     286:	30 93 a3 00 	sts	0x00A3, r19
     28a:	40 93 a4 00 	sts	0x00A4, r20
     28e:	50 93 a5 00 	sts	0x00A5, r21
	duty = 100.0*((float)on_time)/((float)period);
     292:	60 91 af 00 	lds	r22, 0x00AF
     296:	70 91 b0 00 	lds	r23, 0x00B0
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__floatunsisf>
     2a2:	20 e0       	ldi	r18, 0x00	; 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	48 ec       	ldi	r20, 0xC8	; 200
     2a8:	52 e4       	ldi	r21, 0x42	; 66
     2aa:	0e 94 c1 04 	call	0x982	; 0x982 <__mulsf3>
     2ae:	5b 01       	movw	r10, r22
     2b0:	6c 01       	movw	r12, r24
     2b2:	c8 01       	movw	r24, r16
     2b4:	b7 01       	movw	r22, r14
     2b6:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__floatunsisf>
     2ba:	9b 01       	movw	r18, r22
     2bc:	ac 01       	movw	r20, r24
     2be:	c6 01       	movw	r24, r12
     2c0:	b5 01       	movw	r22, r10
     2c2:	0e 94 4c 03 	call	0x698	; 0x698 <__divsf3>
     2c6:	60 93 b1 00 	sts	0x00B1, r22
     2ca:	70 93 b2 00 	sts	0x00B2, r23
     2ce:	80 93 b3 00 	sts	0x00B3, r24
     2d2:	90 93 b4 00 	sts	0x00B4, r25
}
     2d6:	1f 91       	pop	r17
     2d8:	0f 91       	pop	r16
     2da:	ff 90       	pop	r15
     2dc:	ef 90       	pop	r14
     2de:	df 90       	pop	r13
     2e0:	cf 90       	pop	r12
     2e2:	bf 90       	pop	r11
     2e4:	af 90       	pop	r10
     2e6:	08 95       	ret

000002e8 <main>:

int main(void){
	LCDInit(LS_NONE);
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	0e 94 32 02 	call	0x464	; 0x464 <LCDInit>
	Timer1_Capture_Init();
     2ee:	0e 94 49 00 	call	0x92	; 0x92 <Timer1_Capture_Init>
	sei();
     2f2:	78 94       	sei
	Update_LCD();
     2f4:	0e 94 54 00 	call	0xa8	; 0xa8 <Update_LCD>
    while(1){
        Update_LCD();
     2f8:	0e 94 54 00 	call	0xa8	; 0xa8 <Update_LCD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2fc:	8f ef       	ldi	r24, 0xFF	; 255
     2fe:	90 e7       	ldi	r25, 0x70	; 112
     300:	a2 e0       	ldi	r26, 0x02	; 2
     302:	81 50       	subi	r24, 0x01	; 1
     304:	90 40       	sbci	r25, 0x00	; 0
     306:	a0 40       	sbci	r26, 0x00	; 0
     308:	e1 f7       	brne	.-8      	; 0x302 <main+0x1a>
     30a:	00 c0       	rjmp	.+0      	; 0x30c <main+0x24>
     30c:	00 00       	nop
     30e:	f4 cf       	rjmp	.-24     	; 0x2f8 <main+0x10>

00000310 <__vector_6>:
		_delay_ms(50);
    }
	return 0;
}

ISR(TIMER1_CAPT_vect){
     310:	1f 92       	push	r1
     312:	0f 92       	push	r0
     314:	0f b6       	in	r0, 0x3f	; 63
     316:	0f 92       	push	r0
     318:	11 24       	eor	r1, r1
     31a:	2f 93       	push	r18
     31c:	3f 93       	push	r19
     31e:	4f 93       	push	r20
     320:	5f 93       	push	r21
     322:	6f 93       	push	r22
     324:	7f 93       	push	r23
     326:	8f 93       	push	r24
     328:	9f 93       	push	r25
     32a:	af 93       	push	r26
     32c:	bf 93       	push	r27
     32e:	ef 93       	push	r30
     330:	ff 93       	push	r31
	step++;
     332:	80 91 ac 00 	lds	r24, 0x00AC
     336:	8f 5f       	subi	r24, 0xFF	; 255
     338:	80 93 ac 00 	sts	0x00AC, r24
	if(step == 1){
     33c:	81 30       	cpi	r24, 0x01	; 1
     33e:	51 f4       	brne	.+20     	; 0x354 <__vector_6+0x44>
		t1 = ICR1;
     340:	86 b5       	in	r24, 0x26	; 38
     342:	97 b5       	in	r25, 0x27	; 39
     344:	90 93 ab 00 	sts	0x00AB, r25
     348:	80 93 aa 00 	sts	0x00AA, r24
		TCCR1B &= ~(1<<ICES1);
     34c:	8e b5       	in	r24, 0x2e	; 46
     34e:	8f 7b       	andi	r24, 0xBF	; 191
     350:	8e bd       	out	0x2e, r24	; 46
     352:	16 c0       	rjmp	.+44     	; 0x380 <__vector_6+0x70>
	}
	else if(step == 2){
     354:	82 30       	cpi	r24, 0x02	; 2
     356:	51 f4       	brne	.+20     	; 0x36c <__vector_6+0x5c>
		t2 = ICR1;
     358:	86 b5       	in	r24, 0x26	; 38
     35a:	97 b5       	in	r25, 0x27	; 39
     35c:	90 93 a9 00 	sts	0x00A9, r25
     360:	80 93 a8 00 	sts	0x00A8, r24
		TCCR1B |= (1<<ICES1);
     364:	8e b5       	in	r24, 0x2e	; 46
     366:	80 64       	ori	r24, 0x40	; 64
     368:	8e bd       	out	0x2e, r24	; 46
     36a:	0a c0       	rjmp	.+20     	; 0x380 <__vector_6+0x70>
	}
	else if(step == 3){
     36c:	83 30       	cpi	r24, 0x03	; 3
     36e:	41 f4       	brne	.+16     	; 0x380 <__vector_6+0x70>
		t3 = ICR1;
     370:	86 b5       	in	r24, 0x26	; 38
     372:	97 b5       	in	r25, 0x27	; 39
     374:	90 93 a7 00 	sts	0x00A7, r25
     378:	80 93 a6 00 	sts	0x00A6, r24
		TCNT1 = 0;
     37c:	1d bc       	out	0x2d, r1	; 45
     37e:	1c bc       	out	0x2c, r1	; 44
	}
	Freq_Duty_Calculating();
     380:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <Freq_Duty_Calculating>
}
     384:	ff 91       	pop	r31
     386:	ef 91       	pop	r30
     388:	bf 91       	pop	r27
     38a:	af 91       	pop	r26
     38c:	9f 91       	pop	r25
     38e:	8f 91       	pop	r24
     390:	7f 91       	pop	r23
     392:	6f 91       	pop	r22
     394:	5f 91       	pop	r21
     396:	4f 91       	pop	r20
     398:	3f 91       	pop	r19
     39a:	2f 91       	pop	r18
     39c:	0f 90       	pop	r0
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	0f 90       	pop	r0
     3a2:	1f 90       	pop	r1
     3a4:	18 95       	reti

000003a6 <LCDBusyLoop>:

void LCDBusyLoop(){			
	//This function waits till lcd is BUSY
	uint8_t busy,status=0x00,temp;

	LCD_DATA_DDR&=(~(0x0f<<LCD_DATA_POS));		//Change Port to input type because we are reading data
     3a6:	84 b3       	in	r24, 0x14	; 20
     3a8:	8f 70       	andi	r24, 0x0F	; 15
     3aa:	84 bb       	out	0x14, r24	; 20

	//change LCD mode
	SET_RW();				//Read mode
     3ac:	a9 9a       	sbi	0x15, 1	; 21
	CLEAR_RS();				//Read status
     3ae:	a8 98       	cbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b0:	82 e0       	ldi	r24, 0x02	; 2
     3b2:	8a 95       	dec	r24
     3b4:	f1 f7       	brne	.-4      	; 0x3b2 <LCDBusyLoop+0xc>
     3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <LCDBusyLoop+0x12>

	//Let the RW/RS lines stabilize
	_delay_us(0.5);			//tAS
	do{
		SET_E();
     3b8:	aa 9a       	sbi	0x15, 2	; 21
     3ba:	92 e0       	ldi	r25, 0x02	; 2
     3bc:	9a 95       	dec	r25
     3be:	f1 f7       	brne	.-4      	; 0x3bc <LCDBusyLoop+0x16>
     3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <LCDBusyLoop+0x1c>
		_delay_us(0.5);		//Wait tDA for data to become available
		status=(LCD_DATA_PIN>>LCD_DATA_POS);
     3c2:	83 b3       	in	r24, 0x13	; 19
		status=status<<4;
     3c4:	80 7f       	andi	r24, 0xF0	; 240
     3c6:	92 e0       	ldi	r25, 0x02	; 2
     3c8:	9a 95       	dec	r25
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <LCDBusyLoop+0x22>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <LCDBusyLoop+0x28>
		_delay_us(0.5);

		CLEAR_E();			//Pull E low
     3ce:	aa 98       	cbi	0x15, 2	; 21
     3d0:	95 e0       	ldi	r25, 0x05	; 5
     3d2:	9a 95       	dec	r25
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <LCDBusyLoop+0x2c>
     3d6:	00 00       	nop
		_delay_us(1);		//tEL
		SET_E();
     3d8:	aa 9a       	sbi	0x15, 2	; 21
     3da:	92 e0       	ldi	r25, 0x02	; 2
     3dc:	9a 95       	dec	r25
     3de:	f1 f7       	brne	.-4      	; 0x3dc <LCDBusyLoop+0x36>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <LCDBusyLoop+0x3c>
		_delay_us(0.5);

		temp=(LCD_DATA_PIN>>LCD_DATA_POS);
     3e2:	93 b3       	in	r25, 0x13	; 19
     3e4:	92 e0       	ldi	r25, 0x02	; 2
     3e6:	9a 95       	dec	r25
     3e8:	f1 f7       	brne	.-4      	; 0x3e6 <LCDBusyLoop+0x40>
     3ea:	00 c0       	rjmp	.+0      	; 0x3ec <LCDBusyLoop+0x46>
		temp&=0x0F;
		status=status|temp;
		busy=status & 0b10000000;
		_delay_us(0.5);
		CLEAR_E();
     3ec:	aa 98       	cbi	0x15, 2	; 21
     3ee:	95 e0       	ldi	r25, 0x05	; 5
     3f0:	9a 95       	dec	r25
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <LCDBusyLoop+0x4a>
     3f4:	00 00       	nop
		_delay_us(1);		//tEL
	}while(busy);
     3f6:	88 23       	and	r24, r24
     3f8:	fc f2       	brlt	.-66     	; 0x3b8 <LCDBusyLoop+0x12>
	CLEAR_RW();				//write mode
     3fa:	a9 98       	cbi	0x15, 1	; 21
	
	LCD_DATA_DDR|=(0x0F<<LCD_DATA_POS);		//Change Port to output
     3fc:	84 b3       	in	r24, 0x14	; 20
     3fe:	80 6f       	ori	r24, 0xF0	; 240
     400:	84 bb       	out	0x14, r24	; 20
}
     402:	08 95       	ret

00000404 <LCDByte>:
	//NOTE: THIS FUNCTION RETURS ONLY WHEN LCD HAS PROCESSED THE COMMAND

	uint8_t hn,ln;			//Nibbles
	uint8_t temp;

	hn=c>>4;
     404:	28 2f       	mov	r18, r24
     406:	22 95       	swap	r18
     408:	2f 70       	andi	r18, 0x0F	; 15
	ln=(c & 0x0F);
     40a:	8f 70       	andi	r24, 0x0F	; 15

	if(isdata==0)
     40c:	66 23       	and	r22, r22
     40e:	11 f4       	brne	.+4      	; 0x414 <LCDByte+0x10>
		CLEAR_RS();
     410:	a8 98       	cbi	0x15, 0	; 21
     412:	01 c0       	rjmp	.+2      	; 0x416 <LCDByte+0x12>
	else
		SET_RS();
     414:	a8 9a       	sbi	0x15, 0	; 21
     416:	92 e0       	ldi	r25, 0x02	; 2
     418:	9a 95       	dec	r25
     41a:	f1 f7       	brne	.-4      	; 0x418 <LCDByte+0x14>
     41c:	00 c0       	rjmp	.+0      	; 0x41e <LCDByte+0x1a>

	_delay_us(0.500);		//tAS

	SET_E();				//Send high nibble
     41e:	aa 9a       	sbi	0x15, 2	; 21
	temp=(LCD_DATA_PORT & (~(0X0F<<LCD_DATA_POS)))|((hn<<LCD_DATA_POS));
     420:	95 b3       	in	r25, 0x15	; 21
     422:	22 95       	swap	r18
     424:	20 7f       	andi	r18, 0xF0	; 240
     426:	9f 70       	andi	r25, 0x0F	; 15
     428:	92 2b       	or	r25, r18
	LCD_DATA_PORT=temp;
     42a:	95 bb       	out	0x15, r25	; 21
     42c:	95 e0       	ldi	r25, 0x05	; 5
     42e:	9a 95       	dec	r25
     430:	f1 f7       	brne	.-4      	; 0x42e <LCDByte+0x2a>
     432:	00 00       	nop
	_delay_us(1);			//tEH

	//Now data lines are stable pull E low for transmission

	CLEAR_E();				//Send the lower nibble
     434:	aa 98       	cbi	0x15, 2	; 21
     436:	95 e0       	ldi	r25, 0x05	; 5
     438:	9a 95       	dec	r25
     43a:	f1 f7       	brne	.-4      	; 0x438 <LCDByte+0x34>
     43c:	00 00       	nop
	_delay_us(1);
	SET_E();
     43e:	aa 9a       	sbi	0x15, 2	; 21
	temp=(LCD_DATA_PORT & (~(0X0F<<LCD_DATA_POS)))|((ln<<LCD_DATA_POS));
     440:	95 b3       	in	r25, 0x15	; 21
     442:	82 95       	swap	r24
     444:	80 7f       	andi	r24, 0xF0	; 240
     446:	9f 70       	andi	r25, 0x0F	; 15
     448:	89 2b       	or	r24, r25
	LCD_DATA_PORT=temp;
     44a:	85 bb       	out	0x15, r24	; 21
     44c:	85 e0       	ldi	r24, 0x05	; 5
     44e:	8a 95       	dec	r24
     450:	f1 f7       	brne	.-4      	; 0x44e <LCDByte+0x4a>
     452:	00 00       	nop
	_delay_us(1);			//tEH
		

	CLEAR_E();				//SEND
     454:	aa 98       	cbi	0x15, 2	; 21
     456:	95 e0       	ldi	r25, 0x05	; 5
     458:	9a 95       	dec	r25
     45a:	f1 f7       	brne	.-4      	; 0x458 <LCDByte+0x54>
     45c:	00 00       	nop

	_delay_us(1);			//tEL
	LCDBusyLoop();
     45e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCDBusyLoop>
}
     462:	08 95       	ret

00000464 <LCDInit>:
	CLEAR_RW();				//write mode
	
	LCD_DATA_DDR|=(0x0F<<LCD_DATA_POS);		//Change Port to output
}

void LCDInit(uint8_t style){
     464:	1f 93       	push	r17
     466:	18 2f       	mov	r17, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     468:	8f ef       	ldi	r24, 0xFF	; 255
     46a:	96 e7       	ldi	r25, 0x76	; 118
     46c:	a1 e0       	ldi	r26, 0x01	; 1
     46e:	81 50       	subi	r24, 0x01	; 1
     470:	90 40       	sbci	r25, 0x00	; 0
     472:	a0 40       	sbci	r26, 0x00	; 0
     474:	e1 f7       	brne	.-8      	; 0x46e <LCDInit+0xa>
     476:	00 c0       	rjmp	.+0      	; 0x478 <LCDInit+0x14>
     478:	00 00       	nop
	
	//After power on Wait for LCD to Initialize
	_delay_ms(30);
	
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F<<LCD_DATA_POS);
     47a:	84 b3       	in	r24, 0x14	; 20
     47c:	80 6f       	ori	r24, 0xF0	; 240
     47e:	84 bb       	out	0x14, r24	; 20
	LCD_E_DDR|=(1<<LCD_E_POS);
     480:	a2 9a       	sbi	0x14, 2	; 20
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     482:	a0 9a       	sbi	0x14, 0	; 20
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     484:	a1 9a       	sbi	0x14, 1	; 20

	LCD_DATA_PORT&=(~(0x0F<<LCD_DATA_POS));
     486:	85 b3       	in	r24, 0x15	; 21
     488:	8f 70       	andi	r24, 0x0F	; 15
     48a:	85 bb       	out	0x15, r24	; 21
	CLEAR_E();
     48c:	aa 98       	cbi	0x15, 2	; 21
	CLEAR_RW();
     48e:	a9 98       	cbi	0x15, 1	; 21
	CLEAR_RS();
     490:	a8 98       	cbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     492:	00 c0       	rjmp	.+0      	; 0x494 <LCDInit+0x30>
     494:	00 c0       	rjmp	.+0      	; 0x496 <LCDInit+0x32>
     496:	00 00       	nop

	//Set 4-bit mode
	_delay_us(0.3);			//tAS

	SET_E();
     498:	aa 9a       	sbi	0x15, 2	; 21
	LCD_DATA_PORT|=((0b00000010)<<LCD_DATA_POS); //[B] To transfer 0b00100000 i was using LCD_DATA_PORT|=0b00100000
     49a:	ad 9a       	sbi	0x15, 5	; 21
     49c:	95 e0       	ldi	r25, 0x05	; 5
     49e:	9a 95       	dec	r25
     4a0:	f1 f7       	brne	.-4      	; 0x49e <LCDInit+0x3a>
     4a2:	00 00       	nop
	_delay_us(1);
	CLEAR_E();
     4a4:	aa 98       	cbi	0x15, 2	; 21
     4a6:	a5 e0       	ldi	r26, 0x05	; 5
     4a8:	aa 95       	dec	r26
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <LCDInit+0x44>
     4ac:	00 00       	nop
	_delay_us(1);
	
	//Wait for LCD to execute the Functionset Command
	LCDBusyLoop();                                    //[B] Forgot this delay
     4ae:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCDBusyLoop>
	//Now the LCD is in 4-bit mode

	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
     4b2:	88 e2       	ldi	r24, 0x28	; 40
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
	LCDCmd(0b00001100|style);	//Display On
     4ba:	81 2f       	mov	r24, r17
     4bc:	8c 60       	ori	r24, 0x0C	; 12
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
	
}
     4c4:	1f 91       	pop	r17
     4c6:	08 95       	ret

000004c8 <LCDWriteString>:

void LCDWriteString(const char *msg){
     4c8:	cf 93       	push	r28
     4ca:	df 93       	push	r29
     4cc:	ec 01       	movw	r28, r24
	This function Writes a given string to lcd at the current cursor
	location.
	Arguments:
	msg: a null terminated string to print
	*****************************************************************/
	while(*msg!='\0'){
     4ce:	88 81       	ld	r24, Y
     4d0:	88 23       	and	r24, r24
     4d2:	39 f0       	breq	.+14     	; 0x4e2 <LCDWriteString+0x1a>
	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
	LCDCmd(0b00001100|style);	//Display On
	
}

void LCDWriteString(const char *msg){
     4d4:	21 96       	adiw	r28, 0x01	; 1
	location.
	Arguments:
	msg: a null terminated string to print
	*****************************************************************/
	while(*msg!='\0'){
		LCDData(*msg);
     4d6:	61 e0       	ldi	r22, 0x01	; 1
     4d8:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
	This function Writes a given string to lcd at the current cursor
	location.
	Arguments:
	msg: a null terminated string to print
	*****************************************************************/
	while(*msg!='\0'){
     4dc:	89 91       	ld	r24, Y+
     4de:	88 23       	and	r24, r24
     4e0:	d1 f7       	brne	.-12     	; 0x4d6 <LCDWriteString+0xe>
		LCDData(*msg);
		msg++;
	}
}
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length){
     4e8:	ef 92       	push	r14
     4ea:	ff 92       	push	r15
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	df 93       	push	r29
     4f2:	cf 93       	push	r28
     4f4:	00 d0       	rcall	.+0      	; 0x4f6 <LCDWriteInt+0xe>
     4f6:	00 d0       	rcall	.+0      	; 0x4f8 <LCDWriteInt+0x10>
     4f8:	0f 92       	push	r0
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	7b 01       	movw	r14, r22
	Arguments:
	1)int val	: Value to print
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val
	****************************************************************/
	char str[5]={0,0,0,0,0};
     500:	fe 01       	movw	r30, r28
     502:	31 96       	adiw	r30, 0x01	; 1
     504:	25 e0       	ldi	r18, 0x05	; 5
     506:	df 01       	movw	r26, r30
     508:	1d 92       	st	X+, r1
     50a:	2a 95       	dec	r18
     50c:	e9 f7       	brne	.-6      	; 0x508 <LCDWriteInt+0x20>
	int i=4,j=0;
	while(val){
     50e:	00 97       	sbiw	r24, 0x00	; 0
     510:	61 f0       	breq	.+24     	; 0x52a <LCDWriteInt+0x42>
     512:	fe 01       	movw	r30, r28
     514:	36 96       	adiw	r30, 0x06	; 6
		str[i]=val%10;
     516:	2a e0       	ldi	r18, 0x0A	; 10
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	b9 01       	movw	r22, r18
     51c:	0e 94 24 05 	call	0xa48	; 0xa48 <__divmodhi4>
     520:	82 93       	st	-Z, r24
		val=val/10;
     522:	86 2f       	mov	r24, r22
     524:	97 2f       	mov	r25, r23
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val
	****************************************************************/
	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val){
     526:	00 97       	sbiw	r24, 0x00	; 0
     528:	c1 f7       	brne	.-16     	; 0x51a <LCDWriteInt+0x32>
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
     52a:	bf ef       	ldi	r27, 0xFF	; 255
     52c:	eb 16       	cp	r14, r27
     52e:	bf ef       	ldi	r27, 0xFF	; 255
     530:	fb 06       	cpc	r15, r27
     532:	69 f4       	brne	.+26     	; 0x54e <LCDWriteInt+0x66>
		while(str[j]==0) j++;
     534:	29 81       	ldd	r18, Y+1	; 0x01
     536:	22 23       	and	r18, r18
     538:	79 f4       	brne	.+30     	; 0x558 <LCDWriteInt+0x70>
     53a:	fe 01       	movw	r30, r28
     53c:	32 96       	adiw	r30, 0x02	; 2
     53e:	00 e0       	ldi	r16, 0x00	; 0
     540:	10 e0       	ldi	r17, 0x00	; 0
     542:	0f 5f       	subi	r16, 0xFF	; 255
     544:	1f 4f       	sbci	r17, 0xFF	; 255
     546:	21 91       	ld	r18, Z+
     548:	22 23       	and	r18, r18
     54a:	d9 f3       	breq	.-10     	; 0x542 <LCDWriteInt+0x5a>
     54c:	07 c0       	rjmp	.+14     	; 0x55c <LCDWriteInt+0x74>
	else
		j=5-field_length;
     54e:	05 e0       	ldi	r16, 0x05	; 5
     550:	10 e0       	ldi	r17, 0x00	; 0
     552:	0e 19       	sub	r16, r14
     554:	1f 09       	sbc	r17, r15
     556:	02 c0       	rjmp	.+4      	; 0x55c <LCDWriteInt+0x74>
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
		while(str[j]==0) j++;
     558:	00 e0       	ldi	r16, 0x00	; 0
     55a:	10 e0       	ldi	r17, 0x00	; 0
	else
		j=5-field_length;

	if(val<0) LCDData('-');
     55c:	99 23       	and	r25, r25
     55e:	24 f4       	brge	.+8      	; 0x568 <LCDWriteInt+0x80>
     560:	8d e2       	ldi	r24, 0x2D	; 45
     562:	61 e0       	ldi	r22, 0x01	; 1
     564:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
	for(i=j;i<5;i++) LCDData(48+str[i]);
     568:	05 30       	cpi	r16, 0x05	; 5
     56a:	11 05       	cpc	r17, r1
     56c:	94 f4       	brge	.+36     	; 0x592 <LCDWriteInt+0xaa>
		LCDData(*msg);
		msg++;
	}
}

void LCDWriteInt(int val,unsigned int field_length){
     56e:	7e 01       	movw	r14, r28
     570:	08 94       	sec
     572:	e1 1c       	adc	r14, r1
     574:	f1 1c       	adc	r15, r1
     576:	e0 0e       	add	r14, r16
     578:	f1 1e       	adc	r15, r17
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++) LCDData(48+str[i]);
     57a:	f7 01       	movw	r30, r14
     57c:	81 91       	ld	r24, Z+
     57e:	7f 01       	movw	r14, r30
     580:	80 5d       	subi	r24, 0xD0	; 208
     582:	61 e0       	ldi	r22, 0x01	; 1
     584:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
     588:	0f 5f       	subi	r16, 0xFF	; 255
     58a:	1f 4f       	sbci	r17, 0xFF	; 255
     58c:	05 30       	cpi	r16, 0x05	; 5
     58e:	11 05       	cpc	r17, r1
     590:	a4 f3       	brlt	.-24     	; 0x57a <LCDWriteInt+0x92>
}
     592:	0f 90       	pop	r0
     594:	0f 90       	pop	r0
     596:	0f 90       	pop	r0
     598:	0f 90       	pop	r0
     59a:	0f 90       	pop	r0
     59c:	cf 91       	pop	r28
     59e:	df 91       	pop	r29
     5a0:	1f 91       	pop	r17
     5a2:	0f 91       	pop	r16
     5a4:	ff 90       	pop	r15
     5a6:	ef 90       	pop	r14
     5a8:	08 95       	ret

000005aa <LCDGotoXY>:

void LCDGotoXY(uint8_t x,uint8_t y){
	if(x>=20) return;
     5aa:	84 31       	cpi	r24, 0x14	; 20
     5ac:	78 f4       	brcc	.+30     	; 0x5cc <LCDGotoXY+0x22>
	#if (LCD_TYPE == LCD204 || LCD_TYPE == LCD162 || LCD_TYPE == LCD202)
	switch(y){
     5ae:	62 30       	cpi	r22, 0x02	; 2
     5b0:	31 f0       	breq	.+12     	; 0x5be <LCDGotoXY+0x14>
     5b2:	63 30       	cpi	r22, 0x03	; 3
     5b4:	31 f0       	breq	.+12     	; 0x5c2 <LCDGotoXY+0x18>
     5b6:	61 30       	cpi	r22, 0x01	; 1
     5b8:	29 f4       	brne	.+10     	; 0x5c4 <LCDGotoXY+0x1a>
		case 0:
			break;
		case 1:
			x|=0b01000000;
     5ba:	80 64       	ori	r24, 0x40	; 64
			break;
     5bc:	03 c0       	rjmp	.+6      	; 0x5c4 <LCDGotoXY+0x1a>
		case 2:
			x+=0x14;
     5be:	8c 5e       	subi	r24, 0xEC	; 236
			break;
     5c0:	01 c0       	rjmp	.+2      	; 0x5c4 <LCDGotoXY+0x1a>
		case 3:
			x+=0x54;
     5c2:	8c 5a       	subi	r24, 0xAC	; 172
			break;
	}

	#endif
	x|=0b10000000;
  	LCDCmd(x);
     5c4:	80 68       	ori	r24, 0x80	; 128
     5c6:	60 e0       	ldi	r22, 0x00	; 0
     5c8:	0e 94 02 02 	call	0x404	; 0x404 <LCDByte>
     5cc:	08 95       	ret

000005ce <__subsf3>:
     5ce:	50 58       	subi	r21, 0x80	; 128

000005d0 <__addsf3>:
     5d0:	bb 27       	eor	r27, r27
     5d2:	aa 27       	eor	r26, r26
     5d4:	0e d0       	rcall	.+28     	; 0x5f2 <__addsf3x>
     5d6:	84 c1       	rjmp	.+776    	; 0x8e0 <__fp_round>
     5d8:	75 d1       	rcall	.+746    	; 0x8c4 <__fp_pscA>
     5da:	30 f0       	brcs	.+12     	; 0x5e8 <__addsf3+0x18>
     5dc:	7a d1       	rcall	.+756    	; 0x8d2 <__fp_pscB>
     5de:	20 f0       	brcs	.+8      	; 0x5e8 <__addsf3+0x18>
     5e0:	31 f4       	brne	.+12     	; 0x5ee <__addsf3+0x1e>
     5e2:	9f 3f       	cpi	r25, 0xFF	; 255
     5e4:	11 f4       	brne	.+4      	; 0x5ea <__addsf3+0x1a>
     5e6:	1e f4       	brtc	.+6      	; 0x5ee <__addsf3+0x1e>
     5e8:	6a c1       	rjmp	.+724    	; 0x8be <__fp_nan>
     5ea:	0e f4       	brtc	.+2      	; 0x5ee <__addsf3+0x1e>
     5ec:	e0 95       	com	r30
     5ee:	e7 fb       	bst	r30, 7
     5f0:	37 c1       	rjmp	.+622    	; 0x860 <__fp_inf>

000005f2 <__addsf3x>:
     5f2:	e9 2f       	mov	r30, r25
     5f4:	86 d1       	rcall	.+780    	; 0x902 <__fp_split3>
     5f6:	80 f3       	brcs	.-32     	; 0x5d8 <__addsf3+0x8>
     5f8:	ba 17       	cp	r27, r26
     5fa:	62 07       	cpc	r22, r18
     5fc:	73 07       	cpc	r23, r19
     5fe:	84 07       	cpc	r24, r20
     600:	95 07       	cpc	r25, r21
     602:	18 f0       	brcs	.+6      	; 0x60a <__addsf3x+0x18>
     604:	71 f4       	brne	.+28     	; 0x622 <__addsf3x+0x30>
     606:	9e f5       	brtc	.+102    	; 0x66e <__addsf3x+0x7c>
     608:	b5 c1       	rjmp	.+874    	; 0x974 <__fp_zero>
     60a:	0e f4       	brtc	.+2      	; 0x60e <__addsf3x+0x1c>
     60c:	e0 95       	com	r30
     60e:	0b 2e       	mov	r0, r27
     610:	ba 2f       	mov	r27, r26
     612:	a0 2d       	mov	r26, r0
     614:	0b 01       	movw	r0, r22
     616:	b9 01       	movw	r22, r18
     618:	90 01       	movw	r18, r0
     61a:	0c 01       	movw	r0, r24
     61c:	ca 01       	movw	r24, r20
     61e:	a0 01       	movw	r20, r0
     620:	11 24       	eor	r1, r1
     622:	ff 27       	eor	r31, r31
     624:	59 1b       	sub	r21, r25
     626:	99 f0       	breq	.+38     	; 0x64e <__addsf3x+0x5c>
     628:	59 3f       	cpi	r21, 0xF9	; 249
     62a:	50 f4       	brcc	.+20     	; 0x640 <__addsf3x+0x4e>
     62c:	50 3e       	cpi	r21, 0xE0	; 224
     62e:	68 f1       	brcs	.+90     	; 0x68a <__addsf3x+0x98>
     630:	1a 16       	cp	r1, r26
     632:	f0 40       	sbci	r31, 0x00	; 0
     634:	a2 2f       	mov	r26, r18
     636:	23 2f       	mov	r18, r19
     638:	34 2f       	mov	r19, r20
     63a:	44 27       	eor	r20, r20
     63c:	58 5f       	subi	r21, 0xF8	; 248
     63e:	f3 cf       	rjmp	.-26     	; 0x626 <__addsf3x+0x34>
     640:	46 95       	lsr	r20
     642:	37 95       	ror	r19
     644:	27 95       	ror	r18
     646:	a7 95       	ror	r26
     648:	f0 40       	sbci	r31, 0x00	; 0
     64a:	53 95       	inc	r21
     64c:	c9 f7       	brne	.-14     	; 0x640 <__addsf3x+0x4e>
     64e:	7e f4       	brtc	.+30     	; 0x66e <__addsf3x+0x7c>
     650:	1f 16       	cp	r1, r31
     652:	ba 0b       	sbc	r27, r26
     654:	62 0b       	sbc	r22, r18
     656:	73 0b       	sbc	r23, r19
     658:	84 0b       	sbc	r24, r20
     65a:	ba f0       	brmi	.+46     	; 0x68a <__addsf3x+0x98>
     65c:	91 50       	subi	r25, 0x01	; 1
     65e:	a1 f0       	breq	.+40     	; 0x688 <__addsf3x+0x96>
     660:	ff 0f       	add	r31, r31
     662:	bb 1f       	adc	r27, r27
     664:	66 1f       	adc	r22, r22
     666:	77 1f       	adc	r23, r23
     668:	88 1f       	adc	r24, r24
     66a:	c2 f7       	brpl	.-16     	; 0x65c <__addsf3x+0x6a>
     66c:	0e c0       	rjmp	.+28     	; 0x68a <__addsf3x+0x98>
     66e:	ba 0f       	add	r27, r26
     670:	62 1f       	adc	r22, r18
     672:	73 1f       	adc	r23, r19
     674:	84 1f       	adc	r24, r20
     676:	48 f4       	brcc	.+18     	; 0x68a <__addsf3x+0x98>
     678:	87 95       	ror	r24
     67a:	77 95       	ror	r23
     67c:	67 95       	ror	r22
     67e:	b7 95       	ror	r27
     680:	f7 95       	ror	r31
     682:	9e 3f       	cpi	r25, 0xFE	; 254
     684:	08 f0       	brcs	.+2      	; 0x688 <__addsf3x+0x96>
     686:	b3 cf       	rjmp	.-154    	; 0x5ee <__addsf3+0x1e>
     688:	93 95       	inc	r25
     68a:	88 0f       	add	r24, r24
     68c:	08 f0       	brcs	.+2      	; 0x690 <__addsf3x+0x9e>
     68e:	99 27       	eor	r25, r25
     690:	ee 0f       	add	r30, r30
     692:	97 95       	ror	r25
     694:	87 95       	ror	r24
     696:	08 95       	ret

00000698 <__divsf3>:
     698:	0c d0       	rcall	.+24     	; 0x6b2 <__divsf3x>
     69a:	22 c1       	rjmp	.+580    	; 0x8e0 <__fp_round>
     69c:	1a d1       	rcall	.+564    	; 0x8d2 <__fp_pscB>
     69e:	40 f0       	brcs	.+16     	; 0x6b0 <__divsf3+0x18>
     6a0:	11 d1       	rcall	.+546    	; 0x8c4 <__fp_pscA>
     6a2:	30 f0       	brcs	.+12     	; 0x6b0 <__divsf3+0x18>
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x16>
     6a6:	5f 3f       	cpi	r21, 0xFF	; 255
     6a8:	19 f0       	breq	.+6      	; 0x6b0 <__divsf3+0x18>
     6aa:	da c0       	rjmp	.+436    	; 0x860 <__fp_inf>
     6ac:	51 11       	cpse	r21, r1
     6ae:	63 c1       	rjmp	.+710    	; 0x976 <__fp_szero>
     6b0:	06 c1       	rjmp	.+524    	; 0x8be <__fp_nan>

000006b2 <__divsf3x>:
     6b2:	27 d1       	rcall	.+590    	; 0x902 <__fp_split3>
     6b4:	98 f3       	brcs	.-26     	; 0x69c <__divsf3+0x4>

000006b6 <__divsf3_pse>:
     6b6:	99 23       	and	r25, r25
     6b8:	c9 f3       	breq	.-14     	; 0x6ac <__divsf3+0x14>
     6ba:	55 23       	and	r21, r21
     6bc:	b1 f3       	breq	.-20     	; 0x6aa <__divsf3+0x12>
     6be:	95 1b       	sub	r25, r21
     6c0:	55 0b       	sbc	r21, r21
     6c2:	bb 27       	eor	r27, r27
     6c4:	aa 27       	eor	r26, r26
     6c6:	62 17       	cp	r22, r18
     6c8:	73 07       	cpc	r23, r19
     6ca:	84 07       	cpc	r24, r20
     6cc:	38 f0       	brcs	.+14     	; 0x6dc <__divsf3_pse+0x26>
     6ce:	9f 5f       	subi	r25, 0xFF	; 255
     6d0:	5f 4f       	sbci	r21, 0xFF	; 255
     6d2:	22 0f       	add	r18, r18
     6d4:	33 1f       	adc	r19, r19
     6d6:	44 1f       	adc	r20, r20
     6d8:	aa 1f       	adc	r26, r26
     6da:	a9 f3       	breq	.-22     	; 0x6c6 <__divsf3_pse+0x10>
     6dc:	33 d0       	rcall	.+102    	; 0x744 <__divsf3_pse+0x8e>
     6de:	0e 2e       	mov	r0, r30
     6e0:	3a f0       	brmi	.+14     	; 0x6f0 <__divsf3_pse+0x3a>
     6e2:	e0 e8       	ldi	r30, 0x80	; 128
     6e4:	30 d0       	rcall	.+96     	; 0x746 <__divsf3_pse+0x90>
     6e6:	91 50       	subi	r25, 0x01	; 1
     6e8:	50 40       	sbci	r21, 0x00	; 0
     6ea:	e6 95       	lsr	r30
     6ec:	00 1c       	adc	r0, r0
     6ee:	ca f7       	brpl	.-14     	; 0x6e2 <__divsf3_pse+0x2c>
     6f0:	29 d0       	rcall	.+82     	; 0x744 <__divsf3_pse+0x8e>
     6f2:	fe 2f       	mov	r31, r30
     6f4:	27 d0       	rcall	.+78     	; 0x744 <__divsf3_pse+0x8e>
     6f6:	66 0f       	add	r22, r22
     6f8:	77 1f       	adc	r23, r23
     6fa:	88 1f       	adc	r24, r24
     6fc:	bb 1f       	adc	r27, r27
     6fe:	26 17       	cp	r18, r22
     700:	37 07       	cpc	r19, r23
     702:	48 07       	cpc	r20, r24
     704:	ab 07       	cpc	r26, r27
     706:	b0 e8       	ldi	r27, 0x80	; 128
     708:	09 f0       	breq	.+2      	; 0x70c <__divsf3_pse+0x56>
     70a:	bb 0b       	sbc	r27, r27
     70c:	80 2d       	mov	r24, r0
     70e:	bf 01       	movw	r22, r30
     710:	ff 27       	eor	r31, r31
     712:	93 58       	subi	r25, 0x83	; 131
     714:	5f 4f       	sbci	r21, 0xFF	; 255
     716:	2a f0       	brmi	.+10     	; 0x722 <__divsf3_pse+0x6c>
     718:	9e 3f       	cpi	r25, 0xFE	; 254
     71a:	51 05       	cpc	r21, r1
     71c:	68 f0       	brcs	.+26     	; 0x738 <__divsf3_pse+0x82>
     71e:	a0 c0       	rjmp	.+320    	; 0x860 <__fp_inf>
     720:	2a c1       	rjmp	.+596    	; 0x976 <__fp_szero>
     722:	5f 3f       	cpi	r21, 0xFF	; 255
     724:	ec f3       	brlt	.-6      	; 0x720 <__divsf3_pse+0x6a>
     726:	98 3e       	cpi	r25, 0xE8	; 232
     728:	dc f3       	brlt	.-10     	; 0x720 <__divsf3_pse+0x6a>
     72a:	86 95       	lsr	r24
     72c:	77 95       	ror	r23
     72e:	67 95       	ror	r22
     730:	b7 95       	ror	r27
     732:	f7 95       	ror	r31
     734:	9f 5f       	subi	r25, 0xFF	; 255
     736:	c9 f7       	brne	.-14     	; 0x72a <__divsf3_pse+0x74>
     738:	88 0f       	add	r24, r24
     73a:	91 1d       	adc	r25, r1
     73c:	96 95       	lsr	r25
     73e:	87 95       	ror	r24
     740:	97 f9       	bld	r25, 7
     742:	08 95       	ret
     744:	e1 e0       	ldi	r30, 0x01	; 1
     746:	66 0f       	add	r22, r22
     748:	77 1f       	adc	r23, r23
     74a:	88 1f       	adc	r24, r24
     74c:	bb 1f       	adc	r27, r27
     74e:	62 17       	cp	r22, r18
     750:	73 07       	cpc	r23, r19
     752:	84 07       	cpc	r24, r20
     754:	ba 07       	cpc	r27, r26
     756:	20 f0       	brcs	.+8      	; 0x760 <__divsf3_pse+0xaa>
     758:	62 1b       	sub	r22, r18
     75a:	73 0b       	sbc	r23, r19
     75c:	84 0b       	sbc	r24, r20
     75e:	ba 0b       	sbc	r27, r26
     760:	ee 1f       	adc	r30, r30
     762:	88 f7       	brcc	.-30     	; 0x746 <__divsf3_pse+0x90>
     764:	e0 95       	com	r30
     766:	08 95       	ret

00000768 <__fixunssfsi>:
     768:	d4 d0       	rcall	.+424    	; 0x912 <__fp_splitA>
     76a:	88 f0       	brcs	.+34     	; 0x78e <__fixunssfsi+0x26>
     76c:	9f 57       	subi	r25, 0x7F	; 127
     76e:	90 f0       	brcs	.+36     	; 0x794 <__fixunssfsi+0x2c>
     770:	b9 2f       	mov	r27, r25
     772:	99 27       	eor	r25, r25
     774:	b7 51       	subi	r27, 0x17	; 23
     776:	a0 f0       	brcs	.+40     	; 0x7a0 <__fixunssfsi+0x38>
     778:	d1 f0       	breq	.+52     	; 0x7ae <__fixunssfsi+0x46>
     77a:	66 0f       	add	r22, r22
     77c:	77 1f       	adc	r23, r23
     77e:	88 1f       	adc	r24, r24
     780:	99 1f       	adc	r25, r25
     782:	1a f0       	brmi	.+6      	; 0x78a <__fixunssfsi+0x22>
     784:	ba 95       	dec	r27
     786:	c9 f7       	brne	.-14     	; 0x77a <__fixunssfsi+0x12>
     788:	12 c0       	rjmp	.+36     	; 0x7ae <__fixunssfsi+0x46>
     78a:	b1 30       	cpi	r27, 0x01	; 1
     78c:	81 f0       	breq	.+32     	; 0x7ae <__fixunssfsi+0x46>
     78e:	f2 d0       	rcall	.+484    	; 0x974 <__fp_zero>
     790:	b1 e0       	ldi	r27, 0x01	; 1
     792:	08 95       	ret
     794:	ef c0       	rjmp	.+478    	; 0x974 <__fp_zero>
     796:	67 2f       	mov	r22, r23
     798:	78 2f       	mov	r23, r24
     79a:	88 27       	eor	r24, r24
     79c:	b8 5f       	subi	r27, 0xF8	; 248
     79e:	39 f0       	breq	.+14     	; 0x7ae <__fixunssfsi+0x46>
     7a0:	b9 3f       	cpi	r27, 0xF9	; 249
     7a2:	cc f3       	brlt	.-14     	; 0x796 <__fixunssfsi+0x2e>
     7a4:	86 95       	lsr	r24
     7a6:	77 95       	ror	r23
     7a8:	67 95       	ror	r22
     7aa:	b3 95       	inc	r27
     7ac:	d9 f7       	brne	.-10     	; 0x7a4 <__fixunssfsi+0x3c>
     7ae:	3e f4       	brtc	.+14     	; 0x7be <__fixunssfsi+0x56>
     7b0:	90 95       	com	r25
     7b2:	80 95       	com	r24
     7b4:	70 95       	com	r23
     7b6:	61 95       	neg	r22
     7b8:	7f 4f       	sbci	r23, 0xFF	; 255
     7ba:	8f 4f       	sbci	r24, 0xFF	; 255
     7bc:	9f 4f       	sbci	r25, 0xFF	; 255
     7be:	08 95       	ret

000007c0 <__floatunsisf>:
     7c0:	e8 94       	clt
     7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <__floatsisf+0x12>

000007c4 <__floatsisf>:
     7c4:	97 fb       	bst	r25, 7
     7c6:	3e f4       	brtc	.+14     	; 0x7d6 <__floatsisf+0x12>
     7c8:	90 95       	com	r25
     7ca:	80 95       	com	r24
     7cc:	70 95       	com	r23
     7ce:	61 95       	neg	r22
     7d0:	7f 4f       	sbci	r23, 0xFF	; 255
     7d2:	8f 4f       	sbci	r24, 0xFF	; 255
     7d4:	9f 4f       	sbci	r25, 0xFF	; 255
     7d6:	99 23       	and	r25, r25
     7d8:	a9 f0       	breq	.+42     	; 0x804 <__floatsisf+0x40>
     7da:	f9 2f       	mov	r31, r25
     7dc:	96 e9       	ldi	r25, 0x96	; 150
     7de:	bb 27       	eor	r27, r27
     7e0:	93 95       	inc	r25
     7e2:	f6 95       	lsr	r31
     7e4:	87 95       	ror	r24
     7e6:	77 95       	ror	r23
     7e8:	67 95       	ror	r22
     7ea:	b7 95       	ror	r27
     7ec:	f1 11       	cpse	r31, r1
     7ee:	f8 cf       	rjmp	.-16     	; 0x7e0 <__floatsisf+0x1c>
     7f0:	fa f4       	brpl	.+62     	; 0x830 <__floatsisf+0x6c>
     7f2:	bb 0f       	add	r27, r27
     7f4:	11 f4       	brne	.+4      	; 0x7fa <__floatsisf+0x36>
     7f6:	60 ff       	sbrs	r22, 0
     7f8:	1b c0       	rjmp	.+54     	; 0x830 <__floatsisf+0x6c>
     7fa:	6f 5f       	subi	r22, 0xFF	; 255
     7fc:	7f 4f       	sbci	r23, 0xFF	; 255
     7fe:	8f 4f       	sbci	r24, 0xFF	; 255
     800:	9f 4f       	sbci	r25, 0xFF	; 255
     802:	16 c0       	rjmp	.+44     	; 0x830 <__floatsisf+0x6c>
     804:	88 23       	and	r24, r24
     806:	11 f0       	breq	.+4      	; 0x80c <__floatsisf+0x48>
     808:	96 e9       	ldi	r25, 0x96	; 150
     80a:	11 c0       	rjmp	.+34     	; 0x82e <__floatsisf+0x6a>
     80c:	77 23       	and	r23, r23
     80e:	21 f0       	breq	.+8      	; 0x818 <__floatsisf+0x54>
     810:	9e e8       	ldi	r25, 0x8E	; 142
     812:	87 2f       	mov	r24, r23
     814:	76 2f       	mov	r23, r22
     816:	05 c0       	rjmp	.+10     	; 0x822 <__floatsisf+0x5e>
     818:	66 23       	and	r22, r22
     81a:	71 f0       	breq	.+28     	; 0x838 <__floatsisf+0x74>
     81c:	96 e8       	ldi	r25, 0x86	; 134
     81e:	86 2f       	mov	r24, r22
     820:	70 e0       	ldi	r23, 0x00	; 0
     822:	60 e0       	ldi	r22, 0x00	; 0
     824:	2a f0       	brmi	.+10     	; 0x830 <__floatsisf+0x6c>
     826:	9a 95       	dec	r25
     828:	66 0f       	add	r22, r22
     82a:	77 1f       	adc	r23, r23
     82c:	88 1f       	adc	r24, r24
     82e:	da f7       	brpl	.-10     	; 0x826 <__floatsisf+0x62>
     830:	88 0f       	add	r24, r24
     832:	96 95       	lsr	r25
     834:	87 95       	ror	r24
     836:	97 f9       	bld	r25, 7
     838:	08 95       	ret

0000083a <floor>:
     83a:	85 d0       	rcall	.+266    	; 0x946 <__fp_trunc>
     83c:	80 f0       	brcs	.+32     	; 0x85e <floor+0x24>
     83e:	9f 37       	cpi	r25, 0x7F	; 127
     840:	40 f4       	brcc	.+16     	; 0x852 <floor+0x18>
     842:	91 11       	cpse	r25, r1
     844:	0e f0       	brts	.+2      	; 0x848 <floor+0xe>
     846:	97 c0       	rjmp	.+302    	; 0x976 <__fp_szero>
     848:	60 e0       	ldi	r22, 0x00	; 0
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	80 e8       	ldi	r24, 0x80	; 128
     84e:	9f eb       	ldi	r25, 0xBF	; 191
     850:	08 95       	ret
     852:	26 f4       	brtc	.+8      	; 0x85c <floor+0x22>
     854:	1b 16       	cp	r1, r27
     856:	61 1d       	adc	r22, r1
     858:	71 1d       	adc	r23, r1
     85a:	81 1d       	adc	r24, r1
     85c:	07 c0       	rjmp	.+14     	; 0x86c <__fp_mintl>
     85e:	21 c0       	rjmp	.+66     	; 0x8a2 <__fp_mpack>

00000860 <__fp_inf>:
     860:	97 f9       	bld	r25, 7
     862:	9f 67       	ori	r25, 0x7F	; 127
     864:	80 e8       	ldi	r24, 0x80	; 128
     866:	70 e0       	ldi	r23, 0x00	; 0
     868:	60 e0       	ldi	r22, 0x00	; 0
     86a:	08 95       	ret

0000086c <__fp_mintl>:
     86c:	88 23       	and	r24, r24
     86e:	71 f4       	brne	.+28     	; 0x88c <__fp_mintl+0x20>
     870:	77 23       	and	r23, r23
     872:	21 f0       	breq	.+8      	; 0x87c <__fp_mintl+0x10>
     874:	98 50       	subi	r25, 0x08	; 8
     876:	87 2b       	or	r24, r23
     878:	76 2f       	mov	r23, r22
     87a:	07 c0       	rjmp	.+14     	; 0x88a <__fp_mintl+0x1e>
     87c:	66 23       	and	r22, r22
     87e:	11 f4       	brne	.+4      	; 0x884 <__fp_mintl+0x18>
     880:	99 27       	eor	r25, r25
     882:	0d c0       	rjmp	.+26     	; 0x89e <__fp_mintl+0x32>
     884:	90 51       	subi	r25, 0x10	; 16
     886:	86 2b       	or	r24, r22
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	60 e0       	ldi	r22, 0x00	; 0
     88c:	2a f0       	brmi	.+10     	; 0x898 <__fp_mintl+0x2c>
     88e:	9a 95       	dec	r25
     890:	66 0f       	add	r22, r22
     892:	77 1f       	adc	r23, r23
     894:	88 1f       	adc	r24, r24
     896:	da f7       	brpl	.-10     	; 0x88e <__fp_mintl+0x22>
     898:	88 0f       	add	r24, r24
     89a:	96 95       	lsr	r25
     89c:	87 95       	ror	r24
     89e:	97 f9       	bld	r25, 7
     8a0:	08 95       	ret

000008a2 <__fp_mpack>:
     8a2:	9f 3f       	cpi	r25, 0xFF	; 255
     8a4:	31 f0       	breq	.+12     	; 0x8b2 <__fp_mpack_finite+0xc>

000008a6 <__fp_mpack_finite>:
     8a6:	91 50       	subi	r25, 0x01	; 1
     8a8:	20 f4       	brcc	.+8      	; 0x8b2 <__fp_mpack_finite+0xc>
     8aa:	87 95       	ror	r24
     8ac:	77 95       	ror	r23
     8ae:	67 95       	ror	r22
     8b0:	b7 95       	ror	r27
     8b2:	88 0f       	add	r24, r24
     8b4:	91 1d       	adc	r25, r1
     8b6:	96 95       	lsr	r25
     8b8:	87 95       	ror	r24
     8ba:	97 f9       	bld	r25, 7
     8bc:	08 95       	ret

000008be <__fp_nan>:
     8be:	9f ef       	ldi	r25, 0xFF	; 255
     8c0:	80 ec       	ldi	r24, 0xC0	; 192
     8c2:	08 95       	ret

000008c4 <__fp_pscA>:
     8c4:	00 24       	eor	r0, r0
     8c6:	0a 94       	dec	r0
     8c8:	16 16       	cp	r1, r22
     8ca:	17 06       	cpc	r1, r23
     8cc:	18 06       	cpc	r1, r24
     8ce:	09 06       	cpc	r0, r25
     8d0:	08 95       	ret

000008d2 <__fp_pscB>:
     8d2:	00 24       	eor	r0, r0
     8d4:	0a 94       	dec	r0
     8d6:	12 16       	cp	r1, r18
     8d8:	13 06       	cpc	r1, r19
     8da:	14 06       	cpc	r1, r20
     8dc:	05 06       	cpc	r0, r21
     8de:	08 95       	ret

000008e0 <__fp_round>:
     8e0:	09 2e       	mov	r0, r25
     8e2:	03 94       	inc	r0
     8e4:	00 0c       	add	r0, r0
     8e6:	11 f4       	brne	.+4      	; 0x8ec <__fp_round+0xc>
     8e8:	88 23       	and	r24, r24
     8ea:	52 f0       	brmi	.+20     	; 0x900 <__fp_round+0x20>
     8ec:	bb 0f       	add	r27, r27
     8ee:	40 f4       	brcc	.+16     	; 0x900 <__fp_round+0x20>
     8f0:	bf 2b       	or	r27, r31
     8f2:	11 f4       	brne	.+4      	; 0x8f8 <__fp_round+0x18>
     8f4:	60 ff       	sbrs	r22, 0
     8f6:	04 c0       	rjmp	.+8      	; 0x900 <__fp_round+0x20>
     8f8:	6f 5f       	subi	r22, 0xFF	; 255
     8fa:	7f 4f       	sbci	r23, 0xFF	; 255
     8fc:	8f 4f       	sbci	r24, 0xFF	; 255
     8fe:	9f 4f       	sbci	r25, 0xFF	; 255
     900:	08 95       	ret

00000902 <__fp_split3>:
     902:	57 fd       	sbrc	r21, 7
     904:	90 58       	subi	r25, 0x80	; 128
     906:	44 0f       	add	r20, r20
     908:	55 1f       	adc	r21, r21
     90a:	59 f0       	breq	.+22     	; 0x922 <__fp_splitA+0x10>
     90c:	5f 3f       	cpi	r21, 0xFF	; 255
     90e:	71 f0       	breq	.+28     	; 0x92c <__fp_splitA+0x1a>
     910:	47 95       	ror	r20

00000912 <__fp_splitA>:
     912:	88 0f       	add	r24, r24
     914:	97 fb       	bst	r25, 7
     916:	99 1f       	adc	r25, r25
     918:	61 f0       	breq	.+24     	; 0x932 <__fp_splitA+0x20>
     91a:	9f 3f       	cpi	r25, 0xFF	; 255
     91c:	79 f0       	breq	.+30     	; 0x93c <__fp_splitA+0x2a>
     91e:	87 95       	ror	r24
     920:	08 95       	ret
     922:	12 16       	cp	r1, r18
     924:	13 06       	cpc	r1, r19
     926:	14 06       	cpc	r1, r20
     928:	55 1f       	adc	r21, r21
     92a:	f2 cf       	rjmp	.-28     	; 0x910 <__fp_split3+0xe>
     92c:	46 95       	lsr	r20
     92e:	f1 df       	rcall	.-30     	; 0x912 <__fp_splitA>
     930:	08 c0       	rjmp	.+16     	; 0x942 <__fp_splitA+0x30>
     932:	16 16       	cp	r1, r22
     934:	17 06       	cpc	r1, r23
     936:	18 06       	cpc	r1, r24
     938:	99 1f       	adc	r25, r25
     93a:	f1 cf       	rjmp	.-30     	; 0x91e <__fp_splitA+0xc>
     93c:	86 95       	lsr	r24
     93e:	71 05       	cpc	r23, r1
     940:	61 05       	cpc	r22, r1
     942:	08 94       	sec
     944:	08 95       	ret

00000946 <__fp_trunc>:
     946:	e5 df       	rcall	.-54     	; 0x912 <__fp_splitA>
     948:	a0 f0       	brcs	.+40     	; 0x972 <__fp_trunc+0x2c>
     94a:	be e7       	ldi	r27, 0x7E	; 126
     94c:	b9 17       	cp	r27, r25
     94e:	88 f4       	brcc	.+34     	; 0x972 <__fp_trunc+0x2c>
     950:	bb 27       	eor	r27, r27
     952:	9f 38       	cpi	r25, 0x8F	; 143
     954:	60 f4       	brcc	.+24     	; 0x96e <__fp_trunc+0x28>
     956:	16 16       	cp	r1, r22
     958:	b1 1d       	adc	r27, r1
     95a:	67 2f       	mov	r22, r23
     95c:	78 2f       	mov	r23, r24
     95e:	88 27       	eor	r24, r24
     960:	98 5f       	subi	r25, 0xF8	; 248
     962:	f7 cf       	rjmp	.-18     	; 0x952 <__fp_trunc+0xc>
     964:	86 95       	lsr	r24
     966:	77 95       	ror	r23
     968:	67 95       	ror	r22
     96a:	b1 1d       	adc	r27, r1
     96c:	93 95       	inc	r25
     96e:	96 39       	cpi	r25, 0x96	; 150
     970:	c8 f3       	brcs	.-14     	; 0x964 <__fp_trunc+0x1e>
     972:	08 95       	ret

00000974 <__fp_zero>:
     974:	e8 94       	clt

00000976 <__fp_szero>:
     976:	bb 27       	eor	r27, r27
     978:	66 27       	eor	r22, r22
     97a:	77 27       	eor	r23, r23
     97c:	cb 01       	movw	r24, r22
     97e:	97 f9       	bld	r25, 7
     980:	08 95       	ret

00000982 <__mulsf3>:
     982:	0b d0       	rcall	.+22     	; 0x99a <__mulsf3x>
     984:	ad cf       	rjmp	.-166    	; 0x8e0 <__fp_round>
     986:	9e df       	rcall	.-196    	; 0x8c4 <__fp_pscA>
     988:	28 f0       	brcs	.+10     	; 0x994 <__mulsf3+0x12>
     98a:	a3 df       	rcall	.-186    	; 0x8d2 <__fp_pscB>
     98c:	18 f0       	brcs	.+6      	; 0x994 <__mulsf3+0x12>
     98e:	95 23       	and	r25, r21
     990:	09 f0       	breq	.+2      	; 0x994 <__mulsf3+0x12>
     992:	66 cf       	rjmp	.-308    	; 0x860 <__fp_inf>
     994:	94 cf       	rjmp	.-216    	; 0x8be <__fp_nan>
     996:	11 24       	eor	r1, r1
     998:	ee cf       	rjmp	.-36     	; 0x976 <__fp_szero>

0000099a <__mulsf3x>:
     99a:	b3 df       	rcall	.-154    	; 0x902 <__fp_split3>
     99c:	a0 f3       	brcs	.-24     	; 0x986 <__mulsf3+0x4>

0000099e <__mulsf3_pse>:
     99e:	95 9f       	mul	r25, r21
     9a0:	d1 f3       	breq	.-12     	; 0x996 <__mulsf3+0x14>
     9a2:	95 0f       	add	r25, r21
     9a4:	50 e0       	ldi	r21, 0x00	; 0
     9a6:	55 1f       	adc	r21, r21
     9a8:	62 9f       	mul	r22, r18
     9aa:	f0 01       	movw	r30, r0
     9ac:	72 9f       	mul	r23, r18
     9ae:	bb 27       	eor	r27, r27
     9b0:	f0 0d       	add	r31, r0
     9b2:	b1 1d       	adc	r27, r1
     9b4:	63 9f       	mul	r22, r19
     9b6:	aa 27       	eor	r26, r26
     9b8:	f0 0d       	add	r31, r0
     9ba:	b1 1d       	adc	r27, r1
     9bc:	aa 1f       	adc	r26, r26
     9be:	64 9f       	mul	r22, r20
     9c0:	66 27       	eor	r22, r22
     9c2:	b0 0d       	add	r27, r0
     9c4:	a1 1d       	adc	r26, r1
     9c6:	66 1f       	adc	r22, r22
     9c8:	82 9f       	mul	r24, r18
     9ca:	22 27       	eor	r18, r18
     9cc:	b0 0d       	add	r27, r0
     9ce:	a1 1d       	adc	r26, r1
     9d0:	62 1f       	adc	r22, r18
     9d2:	73 9f       	mul	r23, r19
     9d4:	b0 0d       	add	r27, r0
     9d6:	a1 1d       	adc	r26, r1
     9d8:	62 1f       	adc	r22, r18
     9da:	83 9f       	mul	r24, r19
     9dc:	a0 0d       	add	r26, r0
     9de:	61 1d       	adc	r22, r1
     9e0:	22 1f       	adc	r18, r18
     9e2:	74 9f       	mul	r23, r20
     9e4:	33 27       	eor	r19, r19
     9e6:	a0 0d       	add	r26, r0
     9e8:	61 1d       	adc	r22, r1
     9ea:	23 1f       	adc	r18, r19
     9ec:	84 9f       	mul	r24, r20
     9ee:	60 0d       	add	r22, r0
     9f0:	21 1d       	adc	r18, r1
     9f2:	82 2f       	mov	r24, r18
     9f4:	76 2f       	mov	r23, r22
     9f6:	6a 2f       	mov	r22, r26
     9f8:	11 24       	eor	r1, r1
     9fa:	9f 57       	subi	r25, 0x7F	; 127
     9fc:	50 40       	sbci	r21, 0x00	; 0
     9fe:	8a f0       	brmi	.+34     	; 0xa22 <__mulsf3_pse+0x84>
     a00:	e1 f0       	breq	.+56     	; 0xa3a <__mulsf3_pse+0x9c>
     a02:	88 23       	and	r24, r24
     a04:	4a f0       	brmi	.+18     	; 0xa18 <__mulsf3_pse+0x7a>
     a06:	ee 0f       	add	r30, r30
     a08:	ff 1f       	adc	r31, r31
     a0a:	bb 1f       	adc	r27, r27
     a0c:	66 1f       	adc	r22, r22
     a0e:	77 1f       	adc	r23, r23
     a10:	88 1f       	adc	r24, r24
     a12:	91 50       	subi	r25, 0x01	; 1
     a14:	50 40       	sbci	r21, 0x00	; 0
     a16:	a9 f7       	brne	.-22     	; 0xa02 <__mulsf3_pse+0x64>
     a18:	9e 3f       	cpi	r25, 0xFE	; 254
     a1a:	51 05       	cpc	r21, r1
     a1c:	70 f0       	brcs	.+28     	; 0xa3a <__mulsf3_pse+0x9c>
     a1e:	20 cf       	rjmp	.-448    	; 0x860 <__fp_inf>
     a20:	aa cf       	rjmp	.-172    	; 0x976 <__fp_szero>
     a22:	5f 3f       	cpi	r21, 0xFF	; 255
     a24:	ec f3       	brlt	.-6      	; 0xa20 <__mulsf3_pse+0x82>
     a26:	98 3e       	cpi	r25, 0xE8	; 232
     a28:	dc f3       	brlt	.-10     	; 0xa20 <__mulsf3_pse+0x82>
     a2a:	86 95       	lsr	r24
     a2c:	77 95       	ror	r23
     a2e:	67 95       	ror	r22
     a30:	b7 95       	ror	r27
     a32:	f7 95       	ror	r31
     a34:	e7 95       	ror	r30
     a36:	9f 5f       	subi	r25, 0xFF	; 255
     a38:	c1 f7       	brne	.-16     	; 0xa2a <__mulsf3_pse+0x8c>
     a3a:	fe 2b       	or	r31, r30
     a3c:	88 0f       	add	r24, r24
     a3e:	91 1d       	adc	r25, r1
     a40:	96 95       	lsr	r25
     a42:	87 95       	ror	r24
     a44:	97 f9       	bld	r25, 7
     a46:	08 95       	ret

00000a48 <__divmodhi4>:
     a48:	97 fb       	bst	r25, 7
     a4a:	09 2e       	mov	r0, r25
     a4c:	07 26       	eor	r0, r23
     a4e:	0a d0       	rcall	.+20     	; 0xa64 <__divmodhi4_neg1>
     a50:	77 fd       	sbrc	r23, 7
     a52:	04 d0       	rcall	.+8      	; 0xa5c <__divmodhi4_neg2>
     a54:	27 d0       	rcall	.+78     	; 0xaa4 <__udivmodhi4>
     a56:	06 d0       	rcall	.+12     	; 0xa64 <__divmodhi4_neg1>
     a58:	00 20       	and	r0, r0
     a5a:	1a f4       	brpl	.+6      	; 0xa62 <__divmodhi4_exit>

00000a5c <__divmodhi4_neg2>:
     a5c:	70 95       	com	r23
     a5e:	61 95       	neg	r22
     a60:	7f 4f       	sbci	r23, 0xFF	; 255

00000a62 <__divmodhi4_exit>:
     a62:	08 95       	ret

00000a64 <__divmodhi4_neg1>:
     a64:	f6 f7       	brtc	.-4      	; 0xa62 <__divmodhi4_exit>
     a66:	90 95       	com	r25
     a68:	81 95       	neg	r24
     a6a:	9f 4f       	sbci	r25, 0xFF	; 255
     a6c:	08 95       	ret

00000a6e <__divmodsi4>:
     a6e:	97 fb       	bst	r25, 7
     a70:	09 2e       	mov	r0, r25
     a72:	05 26       	eor	r0, r21
     a74:	0e d0       	rcall	.+28     	; 0xa92 <__divmodsi4_neg1>
     a76:	57 fd       	sbrc	r21, 7
     a78:	04 d0       	rcall	.+8      	; 0xa82 <__divmodsi4_neg2>
     a7a:	28 d0       	rcall	.+80     	; 0xacc <__udivmodsi4>
     a7c:	0a d0       	rcall	.+20     	; 0xa92 <__divmodsi4_neg1>
     a7e:	00 1c       	adc	r0, r0
     a80:	38 f4       	brcc	.+14     	; 0xa90 <__divmodsi4_exit>

00000a82 <__divmodsi4_neg2>:
     a82:	50 95       	com	r21
     a84:	40 95       	com	r20
     a86:	30 95       	com	r19
     a88:	21 95       	neg	r18
     a8a:	3f 4f       	sbci	r19, 0xFF	; 255
     a8c:	4f 4f       	sbci	r20, 0xFF	; 255
     a8e:	5f 4f       	sbci	r21, 0xFF	; 255

00000a90 <__divmodsi4_exit>:
     a90:	08 95       	ret

00000a92 <__divmodsi4_neg1>:
     a92:	f6 f7       	brtc	.-4      	; 0xa90 <__divmodsi4_exit>
     a94:	90 95       	com	r25
     a96:	80 95       	com	r24
     a98:	70 95       	com	r23
     a9a:	61 95       	neg	r22
     a9c:	7f 4f       	sbci	r23, 0xFF	; 255
     a9e:	8f 4f       	sbci	r24, 0xFF	; 255
     aa0:	9f 4f       	sbci	r25, 0xFF	; 255
     aa2:	08 95       	ret

00000aa4 <__udivmodhi4>:
     aa4:	aa 1b       	sub	r26, r26
     aa6:	bb 1b       	sub	r27, r27
     aa8:	51 e1       	ldi	r21, 0x11	; 17
     aaa:	07 c0       	rjmp	.+14     	; 0xaba <__udivmodhi4_ep>

00000aac <__udivmodhi4_loop>:
     aac:	aa 1f       	adc	r26, r26
     aae:	bb 1f       	adc	r27, r27
     ab0:	a6 17       	cp	r26, r22
     ab2:	b7 07       	cpc	r27, r23
     ab4:	10 f0       	brcs	.+4      	; 0xaba <__udivmodhi4_ep>
     ab6:	a6 1b       	sub	r26, r22
     ab8:	b7 0b       	sbc	r27, r23

00000aba <__udivmodhi4_ep>:
     aba:	88 1f       	adc	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	5a 95       	dec	r21
     ac0:	a9 f7       	brne	.-22     	; 0xaac <__udivmodhi4_loop>
     ac2:	80 95       	com	r24
     ac4:	90 95       	com	r25
     ac6:	bc 01       	movw	r22, r24
     ac8:	cd 01       	movw	r24, r26
     aca:	08 95       	ret

00000acc <__udivmodsi4>:
     acc:	a1 e2       	ldi	r26, 0x21	; 33
     ace:	1a 2e       	mov	r1, r26
     ad0:	aa 1b       	sub	r26, r26
     ad2:	bb 1b       	sub	r27, r27
     ad4:	fd 01       	movw	r30, r26
     ad6:	0d c0       	rjmp	.+26     	; 0xaf2 <__udivmodsi4_ep>

00000ad8 <__udivmodsi4_loop>:
     ad8:	aa 1f       	adc	r26, r26
     ada:	bb 1f       	adc	r27, r27
     adc:	ee 1f       	adc	r30, r30
     ade:	ff 1f       	adc	r31, r31
     ae0:	a2 17       	cp	r26, r18
     ae2:	b3 07       	cpc	r27, r19
     ae4:	e4 07       	cpc	r30, r20
     ae6:	f5 07       	cpc	r31, r21
     ae8:	20 f0       	brcs	.+8      	; 0xaf2 <__udivmodsi4_ep>
     aea:	a2 1b       	sub	r26, r18
     aec:	b3 0b       	sbc	r27, r19
     aee:	e4 0b       	sbc	r30, r20
     af0:	f5 0b       	sbc	r31, r21

00000af2 <__udivmodsi4_ep>:
     af2:	66 1f       	adc	r22, r22
     af4:	77 1f       	adc	r23, r23
     af6:	88 1f       	adc	r24, r24
     af8:	99 1f       	adc	r25, r25
     afa:	1a 94       	dec	r1
     afc:	69 f7       	brne	.-38     	; 0xad8 <__udivmodsi4_loop>
     afe:	60 95       	com	r22
     b00:	70 95       	com	r23
     b02:	80 95       	com	r24
     b04:	90 95       	com	r25
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	bd 01       	movw	r22, r26
     b0c:	cf 01       	movw	r24, r30
     b0e:	08 95       	ret

00000b10 <sprintf>:
     b10:	ae e0       	ldi	r26, 0x0E	; 14
     b12:	b0 e0       	ldi	r27, 0x00	; 0
     b14:	ee e8       	ldi	r30, 0x8E	; 142
     b16:	f5 e0       	ldi	r31, 0x05	; 5
     b18:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__prologue_saves__+0x1c>
     b1c:	0d 89       	ldd	r16, Y+21	; 0x15
     b1e:	1e 89       	ldd	r17, Y+22	; 0x16
     b20:	86 e0       	ldi	r24, 0x06	; 6
     b22:	8c 83       	std	Y+4, r24	; 0x04
     b24:	1a 83       	std	Y+2, r17	; 0x02
     b26:	09 83       	std	Y+1, r16	; 0x01
     b28:	8f ef       	ldi	r24, 0xFF	; 255
     b2a:	9f e7       	ldi	r25, 0x7F	; 127
     b2c:	9e 83       	std	Y+6, r25	; 0x06
     b2e:	8d 83       	std	Y+5, r24	; 0x05
     b30:	9e 01       	movw	r18, r28
     b32:	27 5e       	subi	r18, 0xE7	; 231
     b34:	3f 4f       	sbci	r19, 0xFF	; 255
     b36:	ce 01       	movw	r24, r28
     b38:	01 96       	adiw	r24, 0x01	; 1
     b3a:	6f 89       	ldd	r22, Y+23	; 0x17
     b3c:	78 8d       	ldd	r23, Y+24	; 0x18
     b3e:	a9 01       	movw	r20, r18
     b40:	0e 94 ab 05 	call	0xb56	; 0xb56 <vfprintf>
     b44:	ef 81       	ldd	r30, Y+7	; 0x07
     b46:	f8 85       	ldd	r31, Y+8	; 0x08
     b48:	e0 0f       	add	r30, r16
     b4a:	f1 1f       	adc	r31, r17
     b4c:	10 82       	st	Z, r1
     b4e:	2e 96       	adiw	r28, 0x0e	; 14
     b50:	e4 e0       	ldi	r30, 0x04	; 4
     b52:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__epilogue_restores__+0x1c>

00000b56 <vfprintf>:
     b56:	ac e0       	ldi	r26, 0x0C	; 12
     b58:	b0 e0       	ldi	r27, 0x00	; 0
     b5a:	e1 eb       	ldi	r30, 0xB1	; 177
     b5c:	f5 e0       	ldi	r31, 0x05	; 5
     b5e:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__prologue_saves__>
     b62:	6c 01       	movw	r12, r24
     b64:	1b 01       	movw	r2, r22
     b66:	8a 01       	movw	r16, r20
     b68:	fc 01       	movw	r30, r24
     b6a:	17 82       	std	Z+7, r1	; 0x07
     b6c:	16 82       	std	Z+6, r1	; 0x06
     b6e:	83 81       	ldd	r24, Z+3	; 0x03
     b70:	81 ff       	sbrs	r24, 1
     b72:	d1 c1       	rjmp	.+930    	; 0xf16 <vfprintf+0x3c0>
     b74:	2e 01       	movw	r4, r28
     b76:	08 94       	sec
     b78:	41 1c       	adc	r4, r1
     b7a:	51 1c       	adc	r5, r1
     b7c:	f6 01       	movw	r30, r12
     b7e:	93 81       	ldd	r25, Z+3	; 0x03
     b80:	f1 01       	movw	r30, r2
     b82:	93 fd       	sbrc	r25, 3
     b84:	85 91       	lpm	r24, Z+
     b86:	93 ff       	sbrs	r25, 3
     b88:	81 91       	ld	r24, Z+
     b8a:	1f 01       	movw	r2, r30
     b8c:	88 23       	and	r24, r24
     b8e:	09 f4       	brne	.+2      	; 0xb92 <vfprintf+0x3c>
     b90:	be c1       	rjmp	.+892    	; 0xf0e <vfprintf+0x3b8>
     b92:	85 32       	cpi	r24, 0x25	; 37
     b94:	39 f4       	brne	.+14     	; 0xba4 <vfprintf+0x4e>
     b96:	93 fd       	sbrc	r25, 3
     b98:	85 91       	lpm	r24, Z+
     b9a:	93 ff       	sbrs	r25, 3
     b9c:	81 91       	ld	r24, Z+
     b9e:	1f 01       	movw	r2, r30
     ba0:	85 32       	cpi	r24, 0x25	; 37
     ba2:	29 f4       	brne	.+10     	; 0xbae <vfprintf+0x58>
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	b6 01       	movw	r22, r12
     ba8:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     bac:	e7 cf       	rjmp	.-50     	; 0xb7c <vfprintf+0x26>
     bae:	ee 24       	eor	r14, r14
     bb0:	ff 24       	eor	r15, r15
     bb2:	20 e0       	ldi	r18, 0x00	; 0
     bb4:	20 32       	cpi	r18, 0x20	; 32
     bb6:	b0 f4       	brcc	.+44     	; 0xbe4 <vfprintf+0x8e>
     bb8:	8b 32       	cpi	r24, 0x2B	; 43
     bba:	69 f0       	breq	.+26     	; 0xbd6 <vfprintf+0x80>
     bbc:	8c 32       	cpi	r24, 0x2C	; 44
     bbe:	28 f4       	brcc	.+10     	; 0xbca <vfprintf+0x74>
     bc0:	80 32       	cpi	r24, 0x20	; 32
     bc2:	51 f0       	breq	.+20     	; 0xbd8 <vfprintf+0x82>
     bc4:	83 32       	cpi	r24, 0x23	; 35
     bc6:	71 f4       	brne	.+28     	; 0xbe4 <vfprintf+0x8e>
     bc8:	0b c0       	rjmp	.+22     	; 0xbe0 <vfprintf+0x8a>
     bca:	8d 32       	cpi	r24, 0x2D	; 45
     bcc:	39 f0       	breq	.+14     	; 0xbdc <vfprintf+0x86>
     bce:	80 33       	cpi	r24, 0x30	; 48
     bd0:	49 f4       	brne	.+18     	; 0xbe4 <vfprintf+0x8e>
     bd2:	21 60       	ori	r18, 0x01	; 1
     bd4:	2c c0       	rjmp	.+88     	; 0xc2e <vfprintf+0xd8>
     bd6:	22 60       	ori	r18, 0x02	; 2
     bd8:	24 60       	ori	r18, 0x04	; 4
     bda:	29 c0       	rjmp	.+82     	; 0xc2e <vfprintf+0xd8>
     bdc:	28 60       	ori	r18, 0x08	; 8
     bde:	27 c0       	rjmp	.+78     	; 0xc2e <vfprintf+0xd8>
     be0:	20 61       	ori	r18, 0x10	; 16
     be2:	25 c0       	rjmp	.+74     	; 0xc2e <vfprintf+0xd8>
     be4:	27 fd       	sbrc	r18, 7
     be6:	2c c0       	rjmp	.+88     	; 0xc40 <vfprintf+0xea>
     be8:	38 2f       	mov	r19, r24
     bea:	30 53       	subi	r19, 0x30	; 48
     bec:	3a 30       	cpi	r19, 0x0A	; 10
     bee:	98 f4       	brcc	.+38     	; 0xc16 <vfprintf+0xc0>
     bf0:	26 ff       	sbrs	r18, 6
     bf2:	08 c0       	rjmp	.+16     	; 0xc04 <vfprintf+0xae>
     bf4:	8e 2d       	mov	r24, r14
     bf6:	88 0f       	add	r24, r24
     bf8:	e8 2e       	mov	r14, r24
     bfa:	ee 0c       	add	r14, r14
     bfc:	ee 0c       	add	r14, r14
     bfe:	e8 0e       	add	r14, r24
     c00:	e3 0e       	add	r14, r19
     c02:	15 c0       	rjmp	.+42     	; 0xc2e <vfprintf+0xd8>
     c04:	8f 2d       	mov	r24, r15
     c06:	88 0f       	add	r24, r24
     c08:	f8 2e       	mov	r15, r24
     c0a:	ff 0c       	add	r15, r15
     c0c:	ff 0c       	add	r15, r15
     c0e:	f8 0e       	add	r15, r24
     c10:	f3 0e       	add	r15, r19
     c12:	20 62       	ori	r18, 0x20	; 32
     c14:	0c c0       	rjmp	.+24     	; 0xc2e <vfprintf+0xd8>
     c16:	8e 32       	cpi	r24, 0x2E	; 46
     c18:	21 f4       	brne	.+8      	; 0xc22 <vfprintf+0xcc>
     c1a:	26 fd       	sbrc	r18, 6
     c1c:	78 c1       	rjmp	.+752    	; 0xf0e <vfprintf+0x3b8>
     c1e:	20 64       	ori	r18, 0x40	; 64
     c20:	06 c0       	rjmp	.+12     	; 0xc2e <vfprintf+0xd8>
     c22:	8c 36       	cpi	r24, 0x6C	; 108
     c24:	11 f4       	brne	.+4      	; 0xc2a <vfprintf+0xd4>
     c26:	20 68       	ori	r18, 0x80	; 128
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <vfprintf+0xd8>
     c2a:	88 36       	cpi	r24, 0x68	; 104
     c2c:	49 f4       	brne	.+18     	; 0xc40 <vfprintf+0xea>
     c2e:	f1 01       	movw	r30, r2
     c30:	93 fd       	sbrc	r25, 3
     c32:	85 91       	lpm	r24, Z+
     c34:	93 ff       	sbrs	r25, 3
     c36:	81 91       	ld	r24, Z+
     c38:	1f 01       	movw	r2, r30
     c3a:	88 23       	and	r24, r24
     c3c:	09 f0       	breq	.+2      	; 0xc40 <vfprintf+0xea>
     c3e:	ba cf       	rjmp	.-140    	; 0xbb4 <vfprintf+0x5e>
     c40:	98 2f       	mov	r25, r24
     c42:	95 54       	subi	r25, 0x45	; 69
     c44:	93 30       	cpi	r25, 0x03	; 3
     c46:	18 f0       	brcs	.+6      	; 0xc4e <vfprintf+0xf8>
     c48:	90 52       	subi	r25, 0x20	; 32
     c4a:	93 30       	cpi	r25, 0x03	; 3
     c4c:	28 f4       	brcc	.+10     	; 0xc58 <vfprintf+0x102>
     c4e:	0c 5f       	subi	r16, 0xFC	; 252
     c50:	1f 4f       	sbci	r17, 0xFF	; 255
     c52:	ff e3       	ldi	r31, 0x3F	; 63
     c54:	f9 83       	std	Y+1, r31	; 0x01
     c56:	0d c0       	rjmp	.+26     	; 0xc72 <vfprintf+0x11c>
     c58:	83 36       	cpi	r24, 0x63	; 99
     c5a:	31 f0       	breq	.+12     	; 0xc68 <vfprintf+0x112>
     c5c:	83 37       	cpi	r24, 0x73	; 115
     c5e:	71 f0       	breq	.+28     	; 0xc7c <vfprintf+0x126>
     c60:	83 35       	cpi	r24, 0x53	; 83
     c62:	09 f0       	breq	.+2      	; 0xc66 <vfprintf+0x110>
     c64:	60 c0       	rjmp	.+192    	; 0xd26 <vfprintf+0x1d0>
     c66:	22 c0       	rjmp	.+68     	; 0xcac <vfprintf+0x156>
     c68:	f8 01       	movw	r30, r16
     c6a:	80 81       	ld	r24, Z
     c6c:	89 83       	std	Y+1, r24	; 0x01
     c6e:	0e 5f       	subi	r16, 0xFE	; 254
     c70:	1f 4f       	sbci	r17, 0xFF	; 255
     c72:	42 01       	movw	r8, r4
     c74:	71 e0       	ldi	r23, 0x01	; 1
     c76:	a7 2e       	mov	r10, r23
     c78:	b1 2c       	mov	r11, r1
     c7a:	16 c0       	rjmp	.+44     	; 0xca8 <vfprintf+0x152>
     c7c:	62 e0       	ldi	r22, 0x02	; 2
     c7e:	66 2e       	mov	r6, r22
     c80:	71 2c       	mov	r7, r1
     c82:	60 0e       	add	r6, r16
     c84:	71 1e       	adc	r7, r17
     c86:	f8 01       	movw	r30, r16
     c88:	80 80       	ld	r8, Z
     c8a:	91 80       	ldd	r9, Z+1	; 0x01
     c8c:	26 ff       	sbrs	r18, 6
     c8e:	03 c0       	rjmp	.+6      	; 0xc96 <vfprintf+0x140>
     c90:	6e 2d       	mov	r22, r14
     c92:	70 e0       	ldi	r23, 0x00	; 0
     c94:	02 c0       	rjmp	.+4      	; 0xc9a <vfprintf+0x144>
     c96:	6f ef       	ldi	r22, 0xFF	; 255
     c98:	7f ef       	ldi	r23, 0xFF	; 255
     c9a:	c4 01       	movw	r24, r8
     c9c:	2c 87       	std	Y+12, r18	; 0x0c
     c9e:	0e 94 9d 07 	call	0xf3a	; 0xf3a <strnlen>
     ca2:	5c 01       	movw	r10, r24
     ca4:	83 01       	movw	r16, r6
     ca6:	2c 85       	ldd	r18, Y+12	; 0x0c
     ca8:	2f 77       	andi	r18, 0x7F	; 127
     caa:	17 c0       	rjmp	.+46     	; 0xcda <vfprintf+0x184>
     cac:	52 e0       	ldi	r21, 0x02	; 2
     cae:	65 2e       	mov	r6, r21
     cb0:	71 2c       	mov	r7, r1
     cb2:	60 0e       	add	r6, r16
     cb4:	71 1e       	adc	r7, r17
     cb6:	f8 01       	movw	r30, r16
     cb8:	80 80       	ld	r8, Z
     cba:	91 80       	ldd	r9, Z+1	; 0x01
     cbc:	26 ff       	sbrs	r18, 6
     cbe:	03 c0       	rjmp	.+6      	; 0xcc6 <vfprintf+0x170>
     cc0:	6e 2d       	mov	r22, r14
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <vfprintf+0x174>
     cc6:	6f ef       	ldi	r22, 0xFF	; 255
     cc8:	7f ef       	ldi	r23, 0xFF	; 255
     cca:	c4 01       	movw	r24, r8
     ccc:	2c 87       	std	Y+12, r18	; 0x0c
     cce:	0e 94 92 07 	call	0xf24	; 0xf24 <strnlen_P>
     cd2:	5c 01       	movw	r10, r24
     cd4:	2c 85       	ldd	r18, Y+12	; 0x0c
     cd6:	20 68       	ori	r18, 0x80	; 128
     cd8:	83 01       	movw	r16, r6
     cda:	23 fd       	sbrc	r18, 3
     cdc:	20 c0       	rjmp	.+64     	; 0xd1e <vfprintf+0x1c8>
     cde:	08 c0       	rjmp	.+16     	; 0xcf0 <vfprintf+0x19a>
     ce0:	80 e2       	ldi	r24, 0x20	; 32
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	b6 01       	movw	r22, r12
     ce6:	2c 87       	std	Y+12, r18	; 0x0c
     ce8:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     cec:	fa 94       	dec	r15
     cee:	2c 85       	ldd	r18, Y+12	; 0x0c
     cf0:	8f 2d       	mov	r24, r15
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	a8 16       	cp	r10, r24
     cf6:	b9 06       	cpc	r11, r25
     cf8:	98 f3       	brcs	.-26     	; 0xce0 <vfprintf+0x18a>
     cfa:	11 c0       	rjmp	.+34     	; 0xd1e <vfprintf+0x1c8>
     cfc:	f4 01       	movw	r30, r8
     cfe:	27 fd       	sbrc	r18, 7
     d00:	85 91       	lpm	r24, Z+
     d02:	27 ff       	sbrs	r18, 7
     d04:	81 91       	ld	r24, Z+
     d06:	4f 01       	movw	r8, r30
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	b6 01       	movw	r22, r12
     d0c:	2c 87       	std	Y+12, r18	; 0x0c
     d0e:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     d12:	2c 85       	ldd	r18, Y+12	; 0x0c
     d14:	f1 10       	cpse	r15, r1
     d16:	fa 94       	dec	r15
     d18:	08 94       	sec
     d1a:	a1 08       	sbc	r10, r1
     d1c:	b1 08       	sbc	r11, r1
     d1e:	a1 14       	cp	r10, r1
     d20:	b1 04       	cpc	r11, r1
     d22:	61 f7       	brne	.-40     	; 0xcfc <vfprintf+0x1a6>
     d24:	f1 c0       	rjmp	.+482    	; 0xf08 <vfprintf+0x3b2>
     d26:	84 36       	cpi	r24, 0x64	; 100
     d28:	11 f0       	breq	.+4      	; 0xd2e <vfprintf+0x1d8>
     d2a:	89 36       	cpi	r24, 0x69	; 105
     d2c:	49 f5       	brne	.+82     	; 0xd80 <vfprintf+0x22a>
     d2e:	27 ff       	sbrs	r18, 7
     d30:	08 c0       	rjmp	.+16     	; 0xd42 <vfprintf+0x1ec>
     d32:	f8 01       	movw	r30, r16
     d34:	60 81       	ld	r22, Z
     d36:	71 81       	ldd	r23, Z+1	; 0x01
     d38:	82 81       	ldd	r24, Z+2	; 0x02
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	0c 5f       	subi	r16, 0xFC	; 252
     d3e:	1f 4f       	sbci	r17, 0xFF	; 255
     d40:	09 c0       	rjmp	.+18     	; 0xd54 <vfprintf+0x1fe>
     d42:	f8 01       	movw	r30, r16
     d44:	60 81       	ld	r22, Z
     d46:	71 81       	ldd	r23, Z+1	; 0x01
     d48:	88 27       	eor	r24, r24
     d4a:	77 fd       	sbrc	r23, 7
     d4c:	80 95       	com	r24
     d4e:	98 2f       	mov	r25, r24
     d50:	0e 5f       	subi	r16, 0xFE	; 254
     d52:	1f 4f       	sbci	r17, 0xFF	; 255
     d54:	4f e6       	ldi	r20, 0x6F	; 111
     d56:	b4 2e       	mov	r11, r20
     d58:	b2 22       	and	r11, r18
     d5a:	97 ff       	sbrs	r25, 7
     d5c:	09 c0       	rjmp	.+18     	; 0xd70 <vfprintf+0x21a>
     d5e:	90 95       	com	r25
     d60:	80 95       	com	r24
     d62:	70 95       	com	r23
     d64:	61 95       	neg	r22
     d66:	7f 4f       	sbci	r23, 0xFF	; 255
     d68:	8f 4f       	sbci	r24, 0xFF	; 255
     d6a:	9f 4f       	sbci	r25, 0xFF	; 255
     d6c:	f0 e8       	ldi	r31, 0x80	; 128
     d6e:	bf 2a       	or	r11, r31
     d70:	a2 01       	movw	r20, r4
     d72:	2a e0       	ldi	r18, 0x0A	; 10
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__ultoa_invert>
     d7a:	78 2e       	mov	r7, r24
     d7c:	74 18       	sub	r7, r4
     d7e:	45 c0       	rjmp	.+138    	; 0xe0a <vfprintf+0x2b4>
     d80:	85 37       	cpi	r24, 0x75	; 117
     d82:	31 f4       	brne	.+12     	; 0xd90 <vfprintf+0x23a>
     d84:	3f ee       	ldi	r19, 0xEF	; 239
     d86:	b3 2e       	mov	r11, r19
     d88:	b2 22       	and	r11, r18
     d8a:	2a e0       	ldi	r18, 0x0A	; 10
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	25 c0       	rjmp	.+74     	; 0xdda <vfprintf+0x284>
     d90:	99 ef       	ldi	r25, 0xF9	; 249
     d92:	b9 2e       	mov	r11, r25
     d94:	b2 22       	and	r11, r18
     d96:	8f 36       	cpi	r24, 0x6F	; 111
     d98:	c1 f0       	breq	.+48     	; 0xdca <vfprintf+0x274>
     d9a:	80 37       	cpi	r24, 0x70	; 112
     d9c:	20 f4       	brcc	.+8      	; 0xda6 <vfprintf+0x250>
     d9e:	88 35       	cpi	r24, 0x58	; 88
     da0:	09 f0       	breq	.+2      	; 0xda4 <vfprintf+0x24e>
     da2:	b5 c0       	rjmp	.+362    	; 0xf0e <vfprintf+0x3b8>
     da4:	0d c0       	rjmp	.+26     	; 0xdc0 <vfprintf+0x26a>
     da6:	80 37       	cpi	r24, 0x70	; 112
     da8:	21 f0       	breq	.+8      	; 0xdb2 <vfprintf+0x25c>
     daa:	88 37       	cpi	r24, 0x78	; 120
     dac:	09 f0       	breq	.+2      	; 0xdb0 <vfprintf+0x25a>
     dae:	af c0       	rjmp	.+350    	; 0xf0e <vfprintf+0x3b8>
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <vfprintf+0x260>
     db2:	20 e1       	ldi	r18, 0x10	; 16
     db4:	b2 2a       	or	r11, r18
     db6:	b4 fe       	sbrs	r11, 4
     db8:	0b c0       	rjmp	.+22     	; 0xdd0 <vfprintf+0x27a>
     dba:	84 e0       	ldi	r24, 0x04	; 4
     dbc:	b8 2a       	or	r11, r24
     dbe:	08 c0       	rjmp	.+16     	; 0xdd0 <vfprintf+0x27a>
     dc0:	b4 fe       	sbrs	r11, 4
     dc2:	09 c0       	rjmp	.+18     	; 0xdd6 <vfprintf+0x280>
     dc4:	e6 e0       	ldi	r30, 0x06	; 6
     dc6:	be 2a       	or	r11, r30
     dc8:	06 c0       	rjmp	.+12     	; 0xdd6 <vfprintf+0x280>
     dca:	28 e0       	ldi	r18, 0x08	; 8
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	05 c0       	rjmp	.+10     	; 0xdda <vfprintf+0x284>
     dd0:	20 e1       	ldi	r18, 0x10	; 16
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <vfprintf+0x284>
     dd6:	20 e1       	ldi	r18, 0x10	; 16
     dd8:	32 e0       	ldi	r19, 0x02	; 2
     dda:	b7 fe       	sbrs	r11, 7
     ddc:	08 c0       	rjmp	.+16     	; 0xdee <vfprintf+0x298>
     dde:	f8 01       	movw	r30, r16
     de0:	60 81       	ld	r22, Z
     de2:	71 81       	ldd	r23, Z+1	; 0x01
     de4:	82 81       	ldd	r24, Z+2	; 0x02
     de6:	93 81       	ldd	r25, Z+3	; 0x03
     de8:	0c 5f       	subi	r16, 0xFC	; 252
     dea:	1f 4f       	sbci	r17, 0xFF	; 255
     dec:	07 c0       	rjmp	.+14     	; 0xdfc <vfprintf+0x2a6>
     dee:	f8 01       	movw	r30, r16
     df0:	60 81       	ld	r22, Z
     df2:	71 81       	ldd	r23, Z+1	; 0x01
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 5f       	subi	r16, 0xFE	; 254
     dfa:	1f 4f       	sbci	r17, 0xFF	; 255
     dfc:	a2 01       	movw	r20, r4
     dfe:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__ultoa_invert>
     e02:	78 2e       	mov	r7, r24
     e04:	74 18       	sub	r7, r4
     e06:	ff e7       	ldi	r31, 0x7F	; 127
     e08:	bf 22       	and	r11, r31
     e0a:	b6 fe       	sbrs	r11, 6
     e0c:	0b c0       	rjmp	.+22     	; 0xe24 <vfprintf+0x2ce>
     e0e:	2e ef       	ldi	r18, 0xFE	; 254
     e10:	b2 22       	and	r11, r18
     e12:	7e 14       	cp	r7, r14
     e14:	38 f4       	brcc	.+14     	; 0xe24 <vfprintf+0x2ce>
     e16:	b4 fe       	sbrs	r11, 4
     e18:	07 c0       	rjmp	.+14     	; 0xe28 <vfprintf+0x2d2>
     e1a:	b2 fc       	sbrc	r11, 2
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <vfprintf+0x2d2>
     e1e:	8f ee       	ldi	r24, 0xEF	; 239
     e20:	b8 22       	and	r11, r24
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <vfprintf+0x2d2>
     e24:	a7 2c       	mov	r10, r7
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <vfprintf+0x2d4>
     e28:	ae 2c       	mov	r10, r14
     e2a:	8b 2d       	mov	r24, r11
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	b4 fe       	sbrs	r11, 4
     e30:	0d c0       	rjmp	.+26     	; 0xe4c <vfprintf+0x2f6>
     e32:	fe 01       	movw	r30, r28
     e34:	e7 0d       	add	r30, r7
     e36:	f1 1d       	adc	r31, r1
     e38:	20 81       	ld	r18, Z
     e3a:	20 33       	cpi	r18, 0x30	; 48
     e3c:	19 f4       	brne	.+6      	; 0xe44 <vfprintf+0x2ee>
     e3e:	e9 ee       	ldi	r30, 0xE9	; 233
     e40:	be 22       	and	r11, r30
     e42:	09 c0       	rjmp	.+18     	; 0xe56 <vfprintf+0x300>
     e44:	a3 94       	inc	r10
     e46:	b2 fe       	sbrs	r11, 2
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0x300>
     e4a:	04 c0       	rjmp	.+8      	; 0xe54 <vfprintf+0x2fe>
     e4c:	86 78       	andi	r24, 0x86	; 134
     e4e:	90 70       	andi	r25, 0x00	; 0
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	09 f0       	breq	.+2      	; 0xe56 <vfprintf+0x300>
     e54:	a3 94       	inc	r10
     e56:	8b 2c       	mov	r8, r11
     e58:	99 24       	eor	r9, r9
     e5a:	b3 fc       	sbrc	r11, 3
     e5c:	14 c0       	rjmp	.+40     	; 0xe86 <vfprintf+0x330>
     e5e:	b0 fe       	sbrs	r11, 0
     e60:	0f c0       	rjmp	.+30     	; 0xe80 <vfprintf+0x32a>
     e62:	af 14       	cp	r10, r15
     e64:	28 f4       	brcc	.+10     	; 0xe70 <vfprintf+0x31a>
     e66:	e7 2c       	mov	r14, r7
     e68:	ef 0c       	add	r14, r15
     e6a:	ea 18       	sub	r14, r10
     e6c:	af 2c       	mov	r10, r15
     e6e:	08 c0       	rjmp	.+16     	; 0xe80 <vfprintf+0x32a>
     e70:	e7 2c       	mov	r14, r7
     e72:	06 c0       	rjmp	.+12     	; 0xe80 <vfprintf+0x32a>
     e74:	80 e2       	ldi	r24, 0x20	; 32
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	b6 01       	movw	r22, r12
     e7a:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     e7e:	a3 94       	inc	r10
     e80:	af 14       	cp	r10, r15
     e82:	c0 f3       	brcs	.-16     	; 0xe74 <vfprintf+0x31e>
     e84:	04 c0       	rjmp	.+8      	; 0xe8e <vfprintf+0x338>
     e86:	af 14       	cp	r10, r15
     e88:	10 f4       	brcc	.+4      	; 0xe8e <vfprintf+0x338>
     e8a:	fa 18       	sub	r15, r10
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <vfprintf+0x33a>
     e8e:	ff 24       	eor	r15, r15
     e90:	84 fe       	sbrs	r8, 4
     e92:	0f c0       	rjmp	.+30     	; 0xeb2 <vfprintf+0x35c>
     e94:	80 e3       	ldi	r24, 0x30	; 48
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	b6 01       	movw	r22, r12
     e9a:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     e9e:	82 fe       	sbrs	r8, 2
     ea0:	1f c0       	rjmp	.+62     	; 0xee0 <vfprintf+0x38a>
     ea2:	81 fe       	sbrs	r8, 1
     ea4:	03 c0       	rjmp	.+6      	; 0xeac <vfprintf+0x356>
     ea6:	88 e5       	ldi	r24, 0x58	; 88
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	10 c0       	rjmp	.+32     	; 0xecc <vfprintf+0x376>
     eac:	88 e7       	ldi	r24, 0x78	; 120
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0d c0       	rjmp	.+26     	; 0xecc <vfprintf+0x376>
     eb2:	c4 01       	movw	r24, r8
     eb4:	86 78       	andi	r24, 0x86	; 134
     eb6:	90 70       	andi	r25, 0x00	; 0
     eb8:	00 97       	sbiw	r24, 0x00	; 0
     eba:	91 f0       	breq	.+36     	; 0xee0 <vfprintf+0x38a>
     ebc:	81 fc       	sbrc	r8, 1
     ebe:	02 c0       	rjmp	.+4      	; 0xec4 <vfprintf+0x36e>
     ec0:	80 e2       	ldi	r24, 0x20	; 32
     ec2:	01 c0       	rjmp	.+2      	; 0xec6 <vfprintf+0x370>
     ec4:	8b e2       	ldi	r24, 0x2B	; 43
     ec6:	b7 fc       	sbrc	r11, 7
     ec8:	8d e2       	ldi	r24, 0x2D	; 45
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	b6 01       	movw	r22, r12
     ece:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     ed2:	06 c0       	rjmp	.+12     	; 0xee0 <vfprintf+0x38a>
     ed4:	80 e3       	ldi	r24, 0x30	; 48
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	b6 01       	movw	r22, r12
     eda:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     ede:	ea 94       	dec	r14
     ee0:	7e 14       	cp	r7, r14
     ee2:	c0 f3       	brcs	.-16     	; 0xed4 <vfprintf+0x37e>
     ee4:	7a 94       	dec	r7
     ee6:	f2 01       	movw	r30, r4
     ee8:	e7 0d       	add	r30, r7
     eea:	f1 1d       	adc	r31, r1
     eec:	80 81       	ld	r24, Z
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	b6 01       	movw	r22, r12
     ef2:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     ef6:	77 20       	and	r7, r7
     ef8:	a9 f7       	brne	.-22     	; 0xee4 <vfprintf+0x38e>
     efa:	06 c0       	rjmp	.+12     	; 0xf08 <vfprintf+0x3b2>
     efc:	80 e2       	ldi	r24, 0x20	; 32
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	b6 01       	movw	r22, r12
     f02:	0e 94 a8 07 	call	0xf50	; 0xf50 <fputc>
     f06:	fa 94       	dec	r15
     f08:	ff 20       	and	r15, r15
     f0a:	c1 f7       	brne	.-16     	; 0xefc <vfprintf+0x3a6>
     f0c:	37 ce       	rjmp	.-914    	; 0xb7c <vfprintf+0x26>
     f0e:	f6 01       	movw	r30, r12
     f10:	26 81       	ldd	r18, Z+6	; 0x06
     f12:	37 81       	ldd	r19, Z+7	; 0x07
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <vfprintf+0x3c4>
     f16:	2f ef       	ldi	r18, 0xFF	; 255
     f18:	3f ef       	ldi	r19, 0xFF	; 255
     f1a:	c9 01       	movw	r24, r18
     f1c:	2c 96       	adiw	r28, 0x0c	; 12
     f1e:	e2 e1       	ldi	r30, 0x12	; 18
     f20:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__epilogue_restores__>

00000f24 <strnlen_P>:
     f24:	fc 01       	movw	r30, r24
     f26:	05 90       	lpm	r0, Z+
     f28:	61 50       	subi	r22, 0x01	; 1
     f2a:	70 40       	sbci	r23, 0x00	; 0
     f2c:	01 10       	cpse	r0, r1
     f2e:	d8 f7       	brcc	.-10     	; 0xf26 <strnlen_P+0x2>
     f30:	80 95       	com	r24
     f32:	90 95       	com	r25
     f34:	8e 0f       	add	r24, r30
     f36:	9f 1f       	adc	r25, r31
     f38:	08 95       	ret

00000f3a <strnlen>:
     f3a:	fc 01       	movw	r30, r24
     f3c:	61 50       	subi	r22, 0x01	; 1
     f3e:	70 40       	sbci	r23, 0x00	; 0
     f40:	01 90       	ld	r0, Z+
     f42:	01 10       	cpse	r0, r1
     f44:	d8 f7       	brcc	.-10     	; 0xf3c <strnlen+0x2>
     f46:	80 95       	com	r24
     f48:	90 95       	com	r25
     f4a:	8e 0f       	add	r24, r30
     f4c:	9f 1f       	adc	r25, r31
     f4e:	08 95       	ret

00000f50 <fputc>:
     f50:	0f 93       	push	r16
     f52:	1f 93       	push	r17
     f54:	cf 93       	push	r28
     f56:	df 93       	push	r29
     f58:	8c 01       	movw	r16, r24
     f5a:	eb 01       	movw	r28, r22
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	81 ff       	sbrs	r24, 1
     f60:	1b c0       	rjmp	.+54     	; 0xf98 <fputc+0x48>
     f62:	82 ff       	sbrs	r24, 2
     f64:	0d c0       	rjmp	.+26     	; 0xf80 <fputc+0x30>
     f66:	2e 81       	ldd	r18, Y+6	; 0x06
     f68:	3f 81       	ldd	r19, Y+7	; 0x07
     f6a:	8c 81       	ldd	r24, Y+4	; 0x04
     f6c:	9d 81       	ldd	r25, Y+5	; 0x05
     f6e:	28 17       	cp	r18, r24
     f70:	39 07       	cpc	r19, r25
     f72:	64 f4       	brge	.+24     	; 0xf8c <fputc+0x3c>
     f74:	e8 81       	ld	r30, Y
     f76:	f9 81       	ldd	r31, Y+1	; 0x01
     f78:	01 93       	st	Z+, r16
     f7a:	f9 83       	std	Y+1, r31	; 0x01
     f7c:	e8 83       	st	Y, r30
     f7e:	06 c0       	rjmp	.+12     	; 0xf8c <fputc+0x3c>
     f80:	e8 85       	ldd	r30, Y+8	; 0x08
     f82:	f9 85       	ldd	r31, Y+9	; 0x09
     f84:	80 2f       	mov	r24, r16
     f86:	09 95       	icall
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	31 f4       	brne	.+12     	; 0xf98 <fputc+0x48>
     f8c:	8e 81       	ldd	r24, Y+6	; 0x06
     f8e:	9f 81       	ldd	r25, Y+7	; 0x07
     f90:	01 96       	adiw	r24, 0x01	; 1
     f92:	9f 83       	std	Y+7, r25	; 0x07
     f94:	8e 83       	std	Y+6, r24	; 0x06
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <fputc+0x4c>
     f98:	0f ef       	ldi	r16, 0xFF	; 255
     f9a:	1f ef       	ldi	r17, 0xFF	; 255
     f9c:	c8 01       	movw	r24, r16
     f9e:	df 91       	pop	r29
     fa0:	cf 91       	pop	r28
     fa2:	1f 91       	pop	r17
     fa4:	0f 91       	pop	r16
     fa6:	08 95       	ret

00000fa8 <__ultoa_invert>:
     fa8:	fa 01       	movw	r30, r20
     faa:	aa 27       	eor	r26, r26
     fac:	28 30       	cpi	r18, 0x08	; 8
     fae:	51 f1       	breq	.+84     	; 0x1004 <__ultoa_invert+0x5c>
     fb0:	20 31       	cpi	r18, 0x10	; 16
     fb2:	81 f1       	breq	.+96     	; 0x1014 <__ultoa_invert+0x6c>
     fb4:	e8 94       	clt
     fb6:	6f 93       	push	r22
     fb8:	6e 7f       	andi	r22, 0xFE	; 254
     fba:	6e 5f       	subi	r22, 0xFE	; 254
     fbc:	7f 4f       	sbci	r23, 0xFF	; 255
     fbe:	8f 4f       	sbci	r24, 0xFF	; 255
     fc0:	9f 4f       	sbci	r25, 0xFF	; 255
     fc2:	af 4f       	sbci	r26, 0xFF	; 255
     fc4:	b1 e0       	ldi	r27, 0x01	; 1
     fc6:	3e d0       	rcall	.+124    	; 0x1044 <__ultoa_invert+0x9c>
     fc8:	b4 e0       	ldi	r27, 0x04	; 4
     fca:	3c d0       	rcall	.+120    	; 0x1044 <__ultoa_invert+0x9c>
     fcc:	67 0f       	add	r22, r23
     fce:	78 1f       	adc	r23, r24
     fd0:	89 1f       	adc	r24, r25
     fd2:	9a 1f       	adc	r25, r26
     fd4:	a1 1d       	adc	r26, r1
     fd6:	68 0f       	add	r22, r24
     fd8:	79 1f       	adc	r23, r25
     fda:	8a 1f       	adc	r24, r26
     fdc:	91 1d       	adc	r25, r1
     fde:	a1 1d       	adc	r26, r1
     fe0:	6a 0f       	add	r22, r26
     fe2:	71 1d       	adc	r23, r1
     fe4:	81 1d       	adc	r24, r1
     fe6:	91 1d       	adc	r25, r1
     fe8:	a1 1d       	adc	r26, r1
     fea:	20 d0       	rcall	.+64     	; 0x102c <__ultoa_invert+0x84>
     fec:	09 f4       	brne	.+2      	; 0xff0 <__ultoa_invert+0x48>
     fee:	68 94       	set
     ff0:	3f 91       	pop	r19
     ff2:	2a e0       	ldi	r18, 0x0A	; 10
     ff4:	26 9f       	mul	r18, r22
     ff6:	11 24       	eor	r1, r1
     ff8:	30 19       	sub	r19, r0
     ffa:	30 5d       	subi	r19, 0xD0	; 208
     ffc:	31 93       	st	Z+, r19
     ffe:	de f6       	brtc	.-74     	; 0xfb6 <__ultoa_invert+0xe>
    1000:	cf 01       	movw	r24, r30
    1002:	08 95       	ret
    1004:	46 2f       	mov	r20, r22
    1006:	47 70       	andi	r20, 0x07	; 7
    1008:	40 5d       	subi	r20, 0xD0	; 208
    100a:	41 93       	st	Z+, r20
    100c:	b3 e0       	ldi	r27, 0x03	; 3
    100e:	0f d0       	rcall	.+30     	; 0x102e <__ultoa_invert+0x86>
    1010:	c9 f7       	brne	.-14     	; 0x1004 <__ultoa_invert+0x5c>
    1012:	f6 cf       	rjmp	.-20     	; 0x1000 <__ultoa_invert+0x58>
    1014:	46 2f       	mov	r20, r22
    1016:	4f 70       	andi	r20, 0x0F	; 15
    1018:	40 5d       	subi	r20, 0xD0	; 208
    101a:	4a 33       	cpi	r20, 0x3A	; 58
    101c:	18 f0       	brcs	.+6      	; 0x1024 <__ultoa_invert+0x7c>
    101e:	49 5d       	subi	r20, 0xD9	; 217
    1020:	31 fd       	sbrc	r19, 1
    1022:	40 52       	subi	r20, 0x20	; 32
    1024:	41 93       	st	Z+, r20
    1026:	02 d0       	rcall	.+4      	; 0x102c <__ultoa_invert+0x84>
    1028:	a9 f7       	brne	.-22     	; 0x1014 <__ultoa_invert+0x6c>
    102a:	ea cf       	rjmp	.-44     	; 0x1000 <__ultoa_invert+0x58>
    102c:	b4 e0       	ldi	r27, 0x04	; 4
    102e:	a6 95       	lsr	r26
    1030:	97 95       	ror	r25
    1032:	87 95       	ror	r24
    1034:	77 95       	ror	r23
    1036:	67 95       	ror	r22
    1038:	ba 95       	dec	r27
    103a:	c9 f7       	brne	.-14     	; 0x102e <__ultoa_invert+0x86>
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	61 05       	cpc	r22, r1
    1040:	71 05       	cpc	r23, r1
    1042:	08 95       	ret
    1044:	9b 01       	movw	r18, r22
    1046:	ac 01       	movw	r20, r24
    1048:	0a 2e       	mov	r0, r26
    104a:	06 94       	lsr	r0
    104c:	57 95       	ror	r21
    104e:	47 95       	ror	r20
    1050:	37 95       	ror	r19
    1052:	27 95       	ror	r18
    1054:	ba 95       	dec	r27
    1056:	c9 f7       	brne	.-14     	; 0x104a <__ultoa_invert+0xa2>
    1058:	62 0f       	add	r22, r18
    105a:	73 1f       	adc	r23, r19
    105c:	84 1f       	adc	r24, r20
    105e:	95 1f       	adc	r25, r21
    1060:	a0 1d       	adc	r26, r0
    1062:	08 95       	ret

00001064 <__prologue_saves__>:
    1064:	2f 92       	push	r2
    1066:	3f 92       	push	r3
    1068:	4f 92       	push	r4
    106a:	5f 92       	push	r5
    106c:	6f 92       	push	r6
    106e:	7f 92       	push	r7
    1070:	8f 92       	push	r8
    1072:	9f 92       	push	r9
    1074:	af 92       	push	r10
    1076:	bf 92       	push	r11
    1078:	cf 92       	push	r12
    107a:	df 92       	push	r13
    107c:	ef 92       	push	r14
    107e:	ff 92       	push	r15
    1080:	0f 93       	push	r16
    1082:	1f 93       	push	r17
    1084:	cf 93       	push	r28
    1086:	df 93       	push	r29
    1088:	cd b7       	in	r28, 0x3d	; 61
    108a:	de b7       	in	r29, 0x3e	; 62
    108c:	ca 1b       	sub	r28, r26
    108e:	db 0b       	sbc	r29, r27
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	de bf       	out	0x3e, r29	; 62
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	cd bf       	out	0x3d, r28	; 61
    109a:	09 94       	ijmp

0000109c <__epilogue_restores__>:
    109c:	2a 88       	ldd	r2, Y+18	; 0x12
    109e:	39 88       	ldd	r3, Y+17	; 0x11
    10a0:	48 88       	ldd	r4, Y+16	; 0x10
    10a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    10a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    10a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    10a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    10aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    10ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    10ae:	b9 84       	ldd	r11, Y+9	; 0x09
    10b0:	c8 84       	ldd	r12, Y+8	; 0x08
    10b2:	df 80       	ldd	r13, Y+7	; 0x07
    10b4:	ee 80       	ldd	r14, Y+6	; 0x06
    10b6:	fd 80       	ldd	r15, Y+5	; 0x05
    10b8:	0c 81       	ldd	r16, Y+4	; 0x04
    10ba:	1b 81       	ldd	r17, Y+3	; 0x03
    10bc:	aa 81       	ldd	r26, Y+2	; 0x02
    10be:	b9 81       	ldd	r27, Y+1	; 0x01
    10c0:	ce 0f       	add	r28, r30
    10c2:	d1 1d       	adc	r29, r1
    10c4:	0f b6       	in	r0, 0x3f	; 63
    10c6:	f8 94       	cli
    10c8:	de bf       	out	0x3e, r29	; 62
    10ca:	0f be       	out	0x3f, r0	; 63
    10cc:	cd bf       	out	0x3d, r28	; 61
    10ce:	ed 01       	movw	r28, r26
    10d0:	08 95       	ret

000010d2 <_exit>:
    10d2:	f8 94       	cli

000010d4 <__stop_program>:
    10d4:	ff cf       	rjmp	.-2      	; 0x10d4 <__stop_program>
