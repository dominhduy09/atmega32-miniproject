
Pulse_Gen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000000d2  00000146  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000014c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000090  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000025  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000179  00000000  00000000  000008ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000119  00000000  00000000  00000a66  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001de  00000000  00000000  00000b7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000020  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000010c  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000038  00000000  00000000  00000e8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 67 00 	jmp	0xce	; 0xce <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:


uint32_t pulse = 20000000;

int main(void){
	DDRA |= (1<<PA7);
  82:	d7 9a       	sbi	0x1a, 7	; 26
	PORTA &= ~(1<<PA7);
  84:	df 98       	cbi	0x1b, 7	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	8f ef       	ldi	r24, 0xFF	; 255
  88:	93 ed       	ldi	r25, 0xD3	; 211
  8a:	a0 e3       	ldi	r26, 0x30	; 48
  8c:	81 50       	subi	r24, 0x01	; 1
  8e:	90 40       	sbci	r25, 0x00	; 0
  90:	a0 40       	sbci	r26, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <main+0xa>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x14>
  96:	00 00       	nop
	_delay_ms(1000);
    while(1){
		if(pulse != 0){
  98:	80 91 60 00 	lds	r24, 0x0060
  9c:	90 91 61 00 	lds	r25, 0x0061
  a0:	a0 91 62 00 	lds	r26, 0x0062
  a4:	b0 91 63 00 	lds	r27, 0x0063
  a8:	00 97       	sbiw	r24, 0x00	; 0
  aa:	a1 05       	cpc	r26, r1
  ac:	b1 05       	cpc	r27, r1
  ae:	71 f0       	breq	.+28     	; 0xcc <main+0x4a>
			PORTA |= (1<<PA7);
  b0:	df 9a       	sbi	0x1b, 7	; 27
			pulse--;
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	a1 09       	sbc	r26, r1
  b6:	b1 09       	sbc	r27, r1
  b8:	80 93 60 00 	sts	0x0060, r24
  bc:	90 93 61 00 	sts	0x0061, r25
  c0:	a0 93 62 00 	sts	0x0062, r26
  c4:	b0 93 63 00 	sts	0x0063, r27
			PORTA &= ~(1<<PA7);
  c8:	df 98       	cbi	0x1b, 7	; 27
  ca:	e6 cf       	rjmp	.-52     	; 0x98 <main+0x16>
  cc:	ff cf       	rjmp	.-2      	; 0xcc <main+0x4a>

000000ce <_exit>:
  ce:	f8 94       	cli

000000d0 <__stop_program>:
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <__stop_program>
