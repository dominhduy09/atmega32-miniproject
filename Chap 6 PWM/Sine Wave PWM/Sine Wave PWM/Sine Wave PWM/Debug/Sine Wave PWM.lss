
Sine Wave PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000272  00800060  0000014c  000001e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  008002d2  008002d2  00000452  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000454  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000090  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000054  00000000  00000000  00000bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000108  00000000  00000000  00000c24  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000000cc  00000000  00000000  00000d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000019d  00000000  00000000  00000df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000040  00000000  00000000  00000f98  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000000d7  00000000  00000000  00000fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 0000002b  00000000  00000000  000010af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3d       	cpi	r26, 0xD2	; 210
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	12 e0       	ldi	r17, 0x02	; 2
  78:	a2 ed       	ldi	r26, 0xD2	; 210
  7a:	b2 e0       	ldi	r27, 0x02	; 2
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 3d       	cpi	r26, 0xD4	; 212
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 57 00 	call	0xae	; 0xae <main>
  8a:	0c 94 a4 00 	jmp	0x148	; 0x148 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Fast_PWM1_8bit_Init>:
						};

uint16_t i = 0;

void Fast_PWM1_8bit_Init(){
	TCCR1B |= (1<<WGM12) | (1<<CS10);
  92:	8e b5       	in	r24, 0x2e	; 46
  94:	89 60       	ori	r24, 0x09	; 9
  96:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |= 0xA1;			//(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (1<<WGM10);
  98:	8f b5       	in	r24, 0x2f	; 47
  9a:	81 6a       	ori	r24, 0xA1	; 161
  9c:	8f bd       	out	0x2f, r24	; 47
	OCR1A = 0x00;
  9e:	1b bc       	out	0x2b, r1	; 43
  a0:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0x00;
  a2:	19 bc       	out	0x29, r1	; 41
  a4:	18 bc       	out	0x28, r1	; 40
	TIMSK |= (1<<TOIE1);
  a6:	89 b7       	in	r24, 0x39	; 57
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	89 bf       	out	0x39, r24	; 57
}
  ac:	08 95       	ret

000000ae <main>:

int main(void){
	DDRD |= (1<<PD4) | (1<<PD5);
  ae:	81 b3       	in	r24, 0x11	; 17
  b0:	80 63       	ori	r24, 0x30	; 48
  b2:	81 bb       	out	0x11, r24	; 17
	PORTD &= ~((1<<PD4) | (1<<PD5));
  b4:	82 b3       	in	r24, 0x12	; 18
  b6:	8f 7c       	andi	r24, 0xCF	; 207
  b8:	82 bb       	out	0x12, r24	; 18
	Fast_PWM1_8bit_Init();
  ba:	0e 94 49 00 	call	0x92	; 0x92 <Fast_PWM1_8bit_Init>
	sei();
  be:	78 94       	sei
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <main+0x12>

000000c2 <__vector_9>:
    while(1){
	   	
    }
}

ISR(TIMER1_OVF_vect){
  c2:	1f 92       	push	r1
  c4:	0f 92       	push	r0
  c6:	0f b6       	in	r0, 0x3f	; 63
  c8:	0f 92       	push	r0
  ca:	11 24       	eor	r1, r1
  cc:	2f 93       	push	r18
  ce:	8f 93       	push	r24
  d0:	9f 93       	push	r25
  d2:	ef 93       	push	r30
  d4:	ff 93       	push	r31
	if(i<625){
  d6:	80 91 d2 02 	lds	r24, 0x02D2
  da:	90 91 d3 02 	lds	r25, 0x02D3
  de:	22 e0       	ldi	r18, 0x02	; 2
  e0:	81 37       	cpi	r24, 0x71	; 113
  e2:	92 07       	cpc	r25, r18
  e4:	50 f4       	brcc	.+20     	; 0xfa <__vector_9+0x38>
		OCR1A = Ref_val[i];
  e6:	80 5a       	subi	r24, 0xA0	; 160
  e8:	9f 4f       	sbci	r25, 0xFF	; 255
  ea:	fc 01       	movw	r30, r24
  ec:	80 81       	ld	r24, Z
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	9b bd       	out	0x2b, r25	; 43
  f2:	8a bd       	out	0x2a, r24	; 42
		OCR1B = 0;
  f4:	19 bc       	out	0x29, r1	; 41
  f6:	18 bc       	out	0x28, r1	; 40
  f8:	0c c0       	rjmp	.+24     	; 0x112 <__vector_9+0x50>
	}
	else{
		OCR1A = 0;
  fa:	1b bc       	out	0x2b, r1	; 43
  fc:	1a bc       	out	0x2a, r1	; 42
		OCR1B = Ref_val[i-625];
  fe:	e0 91 d2 02 	lds	r30, 0x02D2
 102:	f0 91 d3 02 	lds	r31, 0x02D3
 106:	e1 51       	subi	r30, 0x11	; 17
 108:	f2 40       	sbci	r31, 0x02	; 2
 10a:	80 81       	ld	r24, Z
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	99 bd       	out	0x29, r25	; 41
 110:	88 bd       	out	0x28, r24	; 40
	}
	i++;
 112:	80 91 d2 02 	lds	r24, 0x02D2
 116:	90 91 d3 02 	lds	r25, 0x02D3
 11a:	01 96       	adiw	r24, 0x01	; 1
 11c:	90 93 d3 02 	sts	0x02D3, r25
 120:	80 93 d2 02 	sts	0x02D2, r24
	if(i == 1250) i = 0;
 124:	f4 e0       	ldi	r31, 0x04	; 4
 126:	82 3e       	cpi	r24, 0xE2	; 226
 128:	9f 07       	cpc	r25, r31
 12a:	21 f4       	brne	.+8      	; 0x134 <__vector_9+0x72>
 12c:	10 92 d3 02 	sts	0x02D3, r1
 130:	10 92 d2 02 	sts	0x02D2, r1
 134:	ff 91       	pop	r31
 136:	ef 91       	pop	r30
 138:	9f 91       	pop	r25
 13a:	8f 91       	pop	r24
 13c:	2f 91       	pop	r18
 13e:	0f 90       	pop	r0
 140:	0f be       	out	0x3f, r0	; 63
 142:	0f 90       	pop	r0
 144:	1f 90       	pop	r1
 146:	18 95       	reti

00000148 <_exit>:
 148:	f8 94       	cli

0000014a <__stop_program>:
 14a:	ff cf       	rjmp	.-2      	; 0x14a <__stop_program>
